name: Continuous integration

on:
  schedule:
    - cron: "0 20 * * *"
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.5
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: "1.11.3"
          otp-version: "23"
      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
        env:
          MIX_ENV: test
      - name: Setup environment
        run: mix legion.setup
        env:
          MIX_ENV: test
      - name: Run tests
        run: mix test
  coverage:
    name: Run code coverage tool
    runs-on: ubuntu-latest
    needs: test
    services:
      postgres:
        image: postgres:12.5
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: "1.11.3"
          otp-version: "23"
      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
        env:
          MIX_ENV: test
      - name: Setup environment
        run: mix legion.setup
        env:
          MIX_ENV: test
      - name: Run code coverage tool
        run: mix coveralls.json --umbrella
        env:
          MIX_ENV: test
      - name: Push coverage data to the platform
        run: bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  generate-docs:
    name: Generate documentation
    runs-on: ubuntu-latest
    needs: coverage
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        name: Set up Elixir
        with:
          elixir-version: "1.11.3"
          otp-version: "23"
      - uses: actions/cache@v2
        name: Restore dependencies cache
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Run ExDoc
        run: mix docs
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          ACCESS_TOKEN: ${{ secrets.GH_PAGES_ACCESS_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs
          CLEAN: false
  dockerize:
    name: Create a Docker image
    runs-on: ubuntu-latest
    needs: coverage
    services:
      postgres:
        image: postgres:12.5
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: "1.11.3"
          otp-version: "23"
      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: chatatata/legion:latest
      - name: Print image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
