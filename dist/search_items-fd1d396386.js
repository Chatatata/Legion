searchNodes=[{"doc":"Legion keeps the contexts that define your domain and business logic.Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others.","ref":"Legion.html","title":"Legion","type":"module"},{"doc":"Application service for the Legion.The business domain lives in this application.Exposes API to clients such as the LegionWeb application for use in channels, controllers, and elsewhere.","ref":"Legion.Application.html","title":"Legion.Application","type":"module"},{"doc":"Callback implementation for Application.start/2.","ref":"Legion.Application.html#start/2","title":"Legion.Application.start/2","type":"function"},{"doc":"Delegates contextual functions to use the authentication/authorization APIs.","ref":"Legion.Identity.Auth.html","title":"Legion.Identity.Auth","type":"module"},{"doc":"See Legion.Identity.Auth.Abstract.authenticate/5.","ref":"Legion.Identity.Auth.html#authenticate/5","title":"Legion.Identity.Auth.authenticate/5","type":"function"},{"doc":"See Legion.Identity.Auth.Concrete.generate_passphrase/4.","ref":"Legion.Identity.Auth.html#generate_passphrase/4","title":"Legion.Identity.Auth.generate_passphrase/4","type":"function"},{"doc":"See Legion.Identity.Auth.Concrete.register_internal_user/2.","ref":"Legion.Identity.Auth.html#register_internal_user/2","title":"Legion.Identity.Auth.register_internal_user/2","type":"function"},{"doc":"Functions for performing abstract (stealth) authentication.","ref":"Legion.Identity.Auth.Abstract.html","title":"Legion.Identity.Auth.Abstract","type":"module"},{"doc":"Performs abstract authentication for the user with given passkey.","ref":"Legion.Identity.Auth.Abstract.html#authenticate/5","title":"Legion.Identity.Auth.Abstract.authenticate/5","type":"function"},{"doc":"Defines credential-based authentication functions in order to authenticate users.","ref":"Legion.Identity.Auth.Abstract.Token.html","title":"Legion.Identity.Auth.Abstract.Token","type":"module"},{"doc":"Issues a token to given user.Options:lifetime: If supplied, the lifetime of the token will be changed to this value. This defaults to the configuration value.Applied configuration valuesOn Legion.Identity.Auth.Concrete.JOSE domain,:issuer: The issuer of the token, e.g. &quot;legion&quot;.:sub: The subsidiary of the token.If :lifetime is not supplied as an option, the value of the parameter will be applicable to::lifetime: The default lifetime of the token.","ref":"Legion.Identity.Auth.Abstract.Token.html#issue_token/3","title":"Legion.Identity.Auth.Abstract.Token.issue_token/3","type":"function"},{"doc":"Data data structure representing issue result.","ref":"Legion.Identity.Auth.Abstract.Token.html#t:t/0","title":"Legion.Identity.Auth.Abstract.Token.t/0","type":"type"},{"doc":"Represents an invalidation order of permission set grant.","ref":"Legion.Identity.Auth.AccessControl.PermissionSetGrant.Invalidation.html","title":"Legion.Identity.Auth.AccessControl.PermissionSetGrant.Invalidation","type":"module"},{"doc":"","ref":"Legion.Identity.Auth.AccessControl.PermissionSetGrant.Invalidation.html#changeset/2","title":"Legion.Identity.Auth.AccessControl.PermissionSetGrant.Invalidation.changeset/2","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Algorithm.Digestion.html","title":"Legion.Identity.Auth.Algorithm.Digestion","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Legion.Identity.Auth.Algorithm.Digestion.html#cast/1","title":"Legion.Identity.Auth.Algorithm.Digestion.cast/1","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Algorithm.Digestion.html#create_type/0","title":"Legion.Identity.Auth.Algorithm.Digestion.create_type/0","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Algorithm.Digestion.html#drop_type/0","title":"Legion.Identity.Auth.Algorithm.Digestion.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Legion.Identity.Auth.Algorithm.Digestion.html#dump/1","title":"Legion.Identity.Auth.Algorithm.Digestion.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Legion.Identity.Auth.Algorithm.Digestion.html#embed_as/1","title":"Legion.Identity.Auth.Algorithm.Digestion.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Legion.Identity.Auth.Algorithm.Digestion.html#equal?/2","title":"Legion.Identity.Auth.Algorithm.Digestion.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Legion.Identity.Auth.Algorithm.Digestion.html#load/1","title":"Legion.Identity.Auth.Algorithm.Digestion.load/1","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Algorithm.Digestion.html#schema/0","title":"Legion.Identity.Auth.Algorithm.Digestion.schema/0","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Algorithm.Digestion.html#schemaless_type/0","title":"Legion.Identity.Auth.Algorithm.Digestion.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Legion.Identity.Auth.Algorithm.Digestion.html#type/0","title":"Legion.Identity.Auth.Algorithm.Digestion.type/0","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Algorithm.Digestion.html#valid_value?/1","title":"Legion.Identity.Auth.Algorithm.Digestion.valid_value?/1","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Algorithm.Digestion.html#t:t/0","title":"Legion.Identity.Auth.Algorithm.Digestion.t/0","type":"type"},{"doc":"Provides functions for hashing data with FIPS-202 compliant Keccak variants.","ref":"Legion.Identity.Auth.Algorithm.Keccak.html","title":"Legion.Identity.Auth.Algorithm.Keccak","type":"module"},{"doc":"Hashes the given binary with default Keccak algorithm configured.","ref":"Legion.Identity.Auth.Algorithm.Keccak.html#hash/1","title":"Legion.Identity.Auth.Algorithm.Keccak.hash/1","type":"function"},{"doc":"Hashes the given binary with given Keccak algorithm.","ref":"Legion.Identity.Auth.Algorithm.Keccak.html#hash/2","title":"Legion.Identity.Auth.Algorithm.Keccak.hash/2","type":"function"},{"doc":"Keccak variants to be used in default hashing operations.","ref":"Legion.Identity.Auth.Algorithm.Keccak.html#t:algorithm/0","title":"Legion.Identity.Auth.Algorithm.Keccak.algorithm/0","type":"type"},{"doc":"The result of the algorithm.","ref":"Legion.Identity.Auth.Algorithm.Keccak.html#t:hash/0","title":"Legion.Identity.Auth.Algorithm.Keccak.hash/0","type":"type"},{"doc":"Functions for performing concrete authentication.","ref":"Legion.Identity.Auth.Concrete.html","title":"Legion.Identity.Auth.Concrete","type":"module"},{"doc":"Performs concrete authentication for the user with given username, and client-side produced hash. Note that password hash is not password digest, where digest is a time-variant, salted hash of the client-side produced hash.Options:one_shot: If true, the authentication will be fallthrough, it will not generate any passphrases, but return a token without requiring any further abstract authentication. This is useful when user does not need to store the passphrase in the authenticating device. The lifetime of the token is determined seperately from the regular abstract authentication flow. Defaults to false.Return typesWith a valid digest for the user, this function should either return a{:ok, :require, passkey} tuple containing the passkey which should be transferred to the client-side device to be persisted on its secure storage, or{:ok, :access, jwt} tuple containing the JSON Web Token (RFC 7159) to perform stealth authentication directly, or{:ok, :advance, advance_artifact} tuple containing the artifact information for proceeding to the next mandatory step of users preferred multi-factor-authentication method.In such circumstances, these errors can also be returned from the function:{:error, :no_user_verify}: User cannot be found with given username.{:error, :unsupported_scheme}: The authentication scheme of the user is not supported (in implementation). This is subject to change without a notice on further releases and left here for the regression of provisioning services.{:error, :wrong_password_hash}: The password hash is wrong.{:error, :maximum_passphrases_exceeded}: The number of the passphrases (5) are exceeded. User might either reset his/her password, authentication will not proceed.{:error, :bad_host, :reserve_reason}: The IP address provided is reserved by IETF (IANA).{:error, :blacklist, &quot;reason&quot;}: The IP address provided is blacklisted by server authority.Applied configuration valuesIf :one_shot option is enabled, the function takes Legion.Identity.Auth.Concrete.JOSE.extended_lifetime configuration value to provide an expiration time to the token issuer.","ref":"Legion.Identity.Auth.Concrete.html#generate_passphrase/4","title":"Legion.Identity.Auth.Concrete.generate_passphrase/4","type":"function"},{"doc":"Registers an internal user with given username and password hash.CaveatsThe new user will have the insecure authentication scheme set initially, client-side implementations are expected to ask whether user prefers another authentication scheme or not at the time of the completion of this action.","ref":"Legion.Identity.Auth.Concrete.html#register_internal_user/2","title":"Legion.Identity.Auth.Concrete.register_internal_user/2","type":"function"},{"doc":"A view for the passphrases showing currently active entries.","ref":"Legion.Identity.Auth.Concrete.ActivePassphrase.html","title":"Legion.Identity.Auth.Concrete.ActivePassphrase","type":"module"},{"doc":"","ref":"Legion.Identity.Auth.Concrete.ActivePassphrase.html#count_for_user/1","title":"Legion.Identity.Auth.Concrete.ActivePassphrase.count_for_user/1","type":"function"},{"doc":"Lists active passphrase entries for given user.","ref":"Legion.Identity.Auth.Concrete.ActivePassphrase.html#list_for_user/1","title":"Legion.Identity.Auth.Concrete.ActivePassphrase.list_for_user/1","type":"function"},{"doc":"Activities represent token generation from passphrases.","ref":"Legion.Identity.Auth.Concrete.Activity.html","title":"Legion.Identity.Auth.Concrete.Activity","type":"module"},{"doc":"Creates a changeset with given parameters.","ref":"Legion.Identity.Auth.Concrete.Activity.html#changeset/2","title":"Legion.Identity.Auth.Concrete.Activity.changeset/2","type":"function"},{"doc":"Creates a changeset with given passphrase, user agent string and IP address.","ref":"Legion.Identity.Auth.Concrete.Activity.html#create_changeset/4","title":"Legion.Identity.Auth.Concrete.Activity.create_changeset/4","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Concrete.Activity.html#generate_activity/4","title":"Legion.Identity.Auth.Concrete.Activity.generate_activity/4","type":"function"},{"doc":"Fetches last activity of the user from the database. One can supply either User struct or user identifier as an integer as a parameter.","ref":"Legion.Identity.Auth.Concrete.Activity.html#last_activity/1","title":"Legion.Identity.Auth.Concrete.Activity.last_activity/1","type":"function"},{"doc":"Property representing the secure data of an access token.","ref":"Legion.Identity.Auth.Concrete.Passkey.html","title":"Legion.Identity.Auth.Concrete.Passkey","type":"module"},{"doc":"Generates a binary passkey.","ref":"Legion.Identity.Auth.Concrete.Passkey.html#bingenerate/0","title":"Legion.Identity.Auth.Concrete.Passkey.bingenerate/0","type":"function"},{"doc":"Generates a string passkey with an entropy size of 4096.","ref":"Legion.Identity.Auth.Concrete.Passkey.html#generate/0","title":"Legion.Identity.Auth.Concrete.Passkey.generate/0","type":"function"},{"doc":"Hashes given passkey with the default Keccak variant declared in configuration file.","ref":"Legion.Identity.Auth.Concrete.Passkey.html#hash/1","title":"Legion.Identity.Auth.Concrete.Passkey.hash/1","type":"function"},{"doc":"A dummy stall function in order to prevent from handle enumeration. It always return false.","ref":"Legion.Identity.Auth.Concrete.Passkey.html#stall/0","title":"Legion.Identity.Auth.Concrete.Passkey.stall/0","type":"function"},{"doc":"A passkey is simply a random string consisting of 4096 entropy bits.","ref":"Legion.Identity.Auth.Concrete.Passkey.html#t:t/0","title":"Legion.Identity.Auth.Concrete.Passkey.t/0","type":"type"},{"doc":"Passphrase (a.k.a. access token) is an artifact of a successful concrete authentication.","ref":"Legion.Identity.Auth.Concrete.Passphrase.html","title":"Legion.Identity.Auth.Concrete.Passphrase","type":"module"},{"doc":"","ref":"Legion.Identity.Auth.Concrete.Passphrase.html#changeset/2","title":"Legion.Identity.Auth.Concrete.Passphrase.changeset/2","type":"function"},{"doc":"Checks passphrase quota of the user, returns error if it is exceeded.","ref":"Legion.Identity.Auth.Concrete.Passphrase.html#check_passphrase_quota/1","title":"Legion.Identity.Auth.Concrete.Passphrase.check_passphrase_quota/1","type":"function"},{"doc":"Creates a changeset and inserts it into the repository.","ref":"Legion.Identity.Auth.Concrete.Passphrase.html#create/2","title":"Legion.Identity.Auth.Concrete.Passphrase.create/2","type":"function"},{"doc":"Generates a new passphrase changeset and returns it with the passkey itself in a tuple.","ref":"Legion.Identity.Auth.Concrete.Passphrase.html#create_changeset/2","title":"Legion.Identity.Auth.Concrete.Passphrase.create_changeset/2","type":"function"},{"doc":"Returns a boolean value indicating if passphrase exists.","ref":"Legion.Identity.Auth.Concrete.Passphrase.html#exists?/1","title":"Legion.Identity.Auth.Concrete.Passphrase.exists?/1","type":"function"},{"doc":"Searches for a matching passphrase with given user identifier and a passkey hash.Return typesThis function returns a passphrase identifier if there was no faulty conditions. However, it might also return errors in following scenarios.:not_found: No matching passphrase found.:invalid: The passphrase exists, but it is revoked manually.:timed_out: The passphrase exists, however it is not valid anymore.The interface of the business logic might choose to not show the reason for the failed action due to security concerns. Hence, the developer of this API might need to take care of the error values implicitly.DiscussionWe are searching for the passphrases, but not using the Elixir.Legion.Identity.Auth.Concrete.ActivePassphrase view schema. The reason on doing this is, we need to offload the query conditionals to the web application instead of the server.The passkey itself is a unique index, so it is not overwhelming to query one with this attribute on passphrases. The only thing we need to do additionally is looking for an invalidation entry, since we are using unique index here, again, we can leverage the power of the physical btree indexing the invalidations.","ref":"Legion.Identity.Auth.Concrete.Passphrase.html#find_passphrase_matching/2","title":"Legion.Identity.Auth.Concrete.Passphrase.find_passphrase_matching/2","type":"function"},{"doc":"Validates given passphrase and returns :ok, or an error tuple with a reason.A passphrase is valid if and only if it is not invalidated manually and it has not timed out. This function checks its invalidation is nil and its insertion time is in a viable lifetime interval. It returns {:error, :invalid} if passphrase is invalidated manually, or {:error, :timed_out} if passphrase is timed out.CaveatsTo use this function properly, one should preload :invalidation association of the passphrase before supplying it as a parameter to this function. Otherwise, nil-check is performed against the :invalidation field of the struct, it would see the association as non-nil since Ecto.Association.NotLoaded struct will be there.","ref":"Legion.Identity.Auth.Concrete.Passphrase.html#validate/1","title":"Legion.Identity.Auth.Concrete.Passphrase.validate/1","type":"function"},{"doc":"Validates a passphrase with given identifier.","ref":"Legion.Identity.Auth.Concrete.Passphrase.html#validate_id/1","title":"Legion.Identity.Auth.Concrete.Passphrase.validate_id/1","type":"function"},{"doc":"The type of the identifier to uniquely reference a passphrase.","ref":"Legion.Identity.Auth.Concrete.Passphrase.html#t:id/0","title":"Legion.Identity.Auth.Concrete.Passphrase.id/0","type":"type"},{"doc":"Manual invalidation of passphrases.","ref":"Legion.Identity.Auth.Concrete.Passphrase.Invalidation.html","title":"Legion.Identity.Auth.Concrete.Passphrase.Invalidation","type":"module"},{"doc":"","ref":"Legion.Identity.Auth.Concrete.Passphrase.Invalidation.html#changeset/2","title":"Legion.Identity.Auth.Concrete.Passphrase.Invalidation.changeset/2","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Concrete.Scheme.html","title":"Legion.Identity.Auth.Concrete.Scheme","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Legion.Identity.Auth.Concrete.Scheme.html#cast/1","title":"Legion.Identity.Auth.Concrete.Scheme.cast/1","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Concrete.Scheme.html#create_type/0","title":"Legion.Identity.Auth.Concrete.Scheme.create_type/0","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Concrete.Scheme.html#drop_type/0","title":"Legion.Identity.Auth.Concrete.Scheme.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Legion.Identity.Auth.Concrete.Scheme.html#dump/1","title":"Legion.Identity.Auth.Concrete.Scheme.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Legion.Identity.Auth.Concrete.Scheme.html#embed_as/1","title":"Legion.Identity.Auth.Concrete.Scheme.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Legion.Identity.Auth.Concrete.Scheme.html#equal?/2","title":"Legion.Identity.Auth.Concrete.Scheme.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Legion.Identity.Auth.Concrete.Scheme.html#load/1","title":"Legion.Identity.Auth.Concrete.Scheme.load/1","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Concrete.Scheme.html#schema/0","title":"Legion.Identity.Auth.Concrete.Scheme.schema/0","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Concrete.Scheme.html#schemaless_type/0","title":"Legion.Identity.Auth.Concrete.Scheme.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Legion.Identity.Auth.Concrete.Scheme.html#type/0","title":"Legion.Identity.Auth.Concrete.Scheme.type/0","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Concrete.Scheme.html#valid_value?/1","title":"Legion.Identity.Auth.Concrete.Scheme.valid_value?/1","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Concrete.Scheme.html#t:t/0","title":"Legion.Identity.Auth.Concrete.Scheme.t/0","type":"type"},{"doc":"Two-factor authentication handles for concrete authentication.","ref":"Legion.Identity.Auth.Concrete.TFAHandle.html","title":"Legion.Identity.Auth.Concrete.TFAHandle","type":"module"},{"doc":"Challenges a handle of a user with given one time code, returns the subject handle if challenge was successful.","ref":"Legion.Identity.Auth.Concrete.TFAHandle.html#challenge_handle/2","title":"Legion.Identity.Auth.Concrete.TFAHandle.challenge_handle/2","type":"function"},{"doc":"Creates a changeset with given params.","ref":"Legion.Identity.Auth.Concrete.TFAHandle.html#changeset/2","title":"Legion.Identity.Auth.Concrete.TFAHandle.changeset/2","type":"function"},{"doc":"Creates a handle with generated OTC in database and returns it. If user was not found, it returns {:error, :not_found}.","ref":"Legion.Identity.Auth.Concrete.TFAHandle.html#create_handle/1","title":"Legion.Identity.Auth.Concrete.TFAHandle.create_handle/1","type":"function"},{"doc":"A struct for processing authentication process during insecure challange.","ref":"Legion.Identity.Auth.Insecure.AuthInfo.html","title":"Legion.Identity.Auth.Insecure.AuthInfo","type":"module"},{"doc":"Checks if authentication schema is supported, returns error otherwise","ref":"Legion.Identity.Auth.Insecure.AuthInfo.html#check_authentication_schema/1","title":"Legion.Identity.Auth.Insecure.AuthInfo.check_authentication_schema/1","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Insecure.AuthInfo.html#t:t/0","title":"Legion.Identity.Auth.Insecure.AuthInfo.t/0","type":"type"},{"doc":"Provides functionality for blacklisting password hashes.","ref":"Legion.Identity.Auth.Insecure.Blacklist.html","title":"Legion.Identity.Auth.Insecure.Blacklist","type":"module"},{"doc":"Checks whether a word is added to the blacklist.","ref":"Legion.Identity.Auth.Insecure.Blacklist.html#check/1","title":"Legion.Identity.Auth.Insecure.Blacklist.check/1","type":"function"},{"doc":"Performs a binary comparison on hash table.Use this function to check if a particular password hash is blacklisted or not.","ref":"Legion.Identity.Auth.Insecure.Blacklist.html#lookup/1","title":"Legion.Identity.Auth.Insecure.Blacklist.lookup/1","type":"function"},{"doc":"Removes a hash entry from the blacklist.","ref":"Legion.Identity.Auth.Insecure.Blacklist.html#remove/1","title":"Legion.Identity.Auth.Insecure.Blacklist.remove/1","type":"function"},{"doc":"Inserts or updates a word to the blacklist, without any authority identifier. This functions is useful for development/migration purposes, for hardcoded seeding operations. It should not be used in production environment.","ref":"Legion.Identity.Auth.Insecure.Blacklist.html#upsert/1","title":"Legion.Identity.Auth.Insecure.Blacklist.upsert/1","type":"function"},{"doc":"Inserts or updates a word to the blacklist with given authority identifier.This function should be used in runtime.","ref":"Legion.Identity.Auth.Insecure.Blacklist.html#upsert/2","title":"Legion.Identity.Auth.Insecure.Blacklist.upsert/2","type":"function"},{"doc":"Represents a password blacklisting entry.Schema fields:authority_id: The identifier of the authority added the entry. Nullable. Entries containing this attribute are known to be generated at runtime.:hash: The hash ought to be blacklisted.:inserted_at: The time of the blacklisting.","ref":"Legion.Identity.Auth.Insecure.Blacklist.Entry.html","title":"Legion.Identity.Auth.Insecure.Blacklist.Entry","type":"module"},{"doc":"","ref":"Legion.Identity.Auth.Insecure.Blacklist.Entry.html#changeset/2","title":"Legion.Identity.Auth.Insecure.Blacklist.Entry.changeset/2","type":"function"},{"doc":"Represents a credential pair to perform insecure authentication in concrete authentication stage.","ref":"Legion.Identity.Auth.Insecure.Pair.html","title":"Legion.Identity.Auth.Insecure.Pair","type":"module"},{"doc":"","ref":"Legion.Identity.Auth.Insecure.Pair.html#changeset/2","title":"Legion.Identity.Auth.Insecure.Pair.changeset/2","type":"function"},{"doc":"Checks password with given digestion algorithm.","ref":"Legion.Identity.Auth.Insecure.Pair.html#checkpw/3","title":"Legion.Identity.Auth.Insecure.Pair.checkpw/3","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Insecure.Pair.html#hashpwsalt/1","title":"Legion.Identity.Auth.Insecure.Pair.hashpwsalt/1","type":"function"},{"doc":"Retrieves a struct containing the required information to perform instantiation of concrete authentication process on a user.","ref":"Legion.Identity.Auth.Insecure.Pair.html#retrieve_auth_info/1","title":"Legion.Identity.Auth.Insecure.Pair.retrieve_auth_info/1","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.Insecure.Pair.html#t:digestion_algorithm/0","title":"Legion.Identity.Auth.Insecure.Pair.digestion_algorithm/0","type":"type"},{"doc":"One time codes allow users to enable two-factor authentication (2FA). One may decide to use OTCs with SMS or e-mail. OTC is server-generated, and it cannot be resembled by any client.","ref":"Legion.Identity.Auth.TFA.OneTimeCode.html","title":"Legion.Identity.Auth.TFA.OneTimeCode","type":"module"},{"doc":"Generates a one-time-code with type declared in configuration. Use generate/1 to explicitly set the type instead.","ref":"Legion.Identity.Auth.TFA.OneTimeCode.html#generate/0","title":"Legion.Identity.Auth.TFA.OneTimeCode.generate/0","type":"function"},{"doc":"Generates a one-time-code in given type.","ref":"Legion.Identity.Auth.TFA.OneTimeCode.html#generate/1","title":"Legion.Identity.Auth.TFA.OneTimeCode.generate/1","type":"function"},{"doc":"Hashes given one-time-code with the default Keccak variant declared in configuration file.","ref":"Legion.Identity.Auth.TFA.OneTimeCode.html#hash/1","title":"Legion.Identity.Auth.TFA.OneTimeCode.hash/1","type":"function"},{"doc":"A dummy stall function in order to prevent from handle enumeration. It always return false.","ref":"Legion.Identity.Auth.TFA.OneTimeCode.html#stall/0","title":"Legion.Identity.Auth.TFA.OneTimeCode.stall/0","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.TFA.OneTimeCode.html#t:algorithm/0","title":"Legion.Identity.Auth.TFA.OneTimeCode.algorithm/0","type":"type"},{"doc":"Type of a one-time-code.","ref":"Legion.Identity.Auth.TFA.OneTimeCode.html#t:format/0","title":"Legion.Identity.Auth.TFA.OneTimeCode.format/0","type":"type"},{"doc":"Represents resulting artifact of generator functions.","ref":"Legion.Identity.Auth.TFA.OneTimeCode.html#t:t/0","title":"Legion.Identity.Auth.TFA.OneTimeCode.t/0","type":"type"},{"doc":"Delegates contextual functions to use the identity APIs.","ref":"Legion.Identity.Information.html","title":"Legion.Identity.Information","type":"module"},{"doc":"See Legion.Identity.Information.User.get_user/1.","ref":"Legion.Identity.Information.html#get_user/1","title":"Legion.Identity.Information.get_user/1","type":"function"},{"doc":"Functions for using the address book.Shared optionsFunctions create_address/5 and update_address/5 are subject to options below.:type: The new type of the address.:name: The new name of the address.:country_name: The name of the country.:description: The description of the address entry.:state: The new name of the state.:city: The new name of the city.:neighborhood: The new name of the neighborhood.:zip_code: The new zip code of the location.:location: The new coordinates of the location.","ref":"Legion.Identity.Information.AddressBook.html","title":"Legion.Identity.Information.AddressBook","type":"module"},{"doc":"Adds an address entry to the user. To get more information about the fields, see Legion.Identity.Information.AddressBook.Address.","ref":"Legion.Identity.Information.AddressBook.html#create_address/5","title":"Legion.Identity.Information.AddressBook.create_address/5","type":"function"},{"doc":"Deletes an address with given identifier.","ref":"Legion.Identity.Information.AddressBook.html#delete_address!/1","title":"Legion.Identity.Information.AddressBook.delete_address!/1","type":"function"},{"doc":"Lists addresses of the user.Options:limit: Limits the number of entities in result. Defaults to 5.:offset: Skips given number of entities in result.","ref":"Legion.Identity.Information.AddressBook.html#list_addresses_of_user/2","title":"Legion.Identity.Information.AddressBook.list_addresses_of_user/2","type":"function"},{"doc":"Updates address with given attributes.OptionsSee the &quot;Shared options&quot; section at the module documentation.","ref":"Legion.Identity.Information.AddressBook.html#update_address/5","title":"Legion.Identity.Information.AddressBook.update_address/5","type":"function"},{"doc":"Represents an entry found in address book.Schema fields:user_id: The identifier of the user that address belongs to.:type: Type of the address, e.g. &quot;home&quot;, &quot;work&quot;.:name: Name of the address, e.g. &quot;Home at Rotterdam&quot;.:description: Description of the address. Most of the time this is a short explanation of the address in a particular language to help to navigate the readers of the address properly.:state: Name of the state, e.g. &quot;Kansas&quot;. Some countries might not respect the political divisions to this type of attribute.:city: Name of the city, e.g. &quot;Rotterdam&quot;.:neighborhood: Name of the neighborhood, e.g. &quot;Beukelsdijk&quot;.:zip_code: Zip code of the location.","ref":"Legion.Identity.Information.AddressBook.Address.html","title":"Legion.Identity.Information.AddressBook.Address","type":"module"},{"doc":"","ref":"Legion.Identity.Information.AddressBook.Address.html#changeset/2","title":"Legion.Identity.Information.AddressBook.Address.changeset/2","type":"function"},{"doc":"Represents a polymorphic type, containing either the struct itself or a unique identifier.","ref":"Legion.Identity.Information.AddressBook.Address.html#t:address_or_id/0","title":"Legion.Identity.Information.AddressBook.Address.address_or_id/0","type":"type"},{"doc":"Shows the type of the address.","ref":"Legion.Identity.Information.AddressBook.Address.html#t:address_type/0","title":"Legion.Identity.Information.AddressBook.Address.address_type/0","type":"type"},{"doc":"Unique identifier for the address.","ref":"Legion.Identity.Information.AddressBook.Address.html#t:id/0","title":"Legion.Identity.Information.AddressBook.Address.id/0","type":"type"},{"doc":"","ref":"Legion.Identity.Information.AddressBook.AddressType.html","title":"Legion.Identity.Information.AddressBook.AddressType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Legion.Identity.Information.AddressBook.AddressType.html#cast/1","title":"Legion.Identity.Information.AddressBook.AddressType.cast/1","type":"function"},{"doc":"","ref":"Legion.Identity.Information.AddressBook.AddressType.html#create_type/0","title":"Legion.Identity.Information.AddressBook.AddressType.create_type/0","type":"function"},{"doc":"","ref":"Legion.Identity.Information.AddressBook.AddressType.html#drop_type/0","title":"Legion.Identity.Information.AddressBook.AddressType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Legion.Identity.Information.AddressBook.AddressType.html#dump/1","title":"Legion.Identity.Information.AddressBook.AddressType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Legion.Identity.Information.AddressBook.AddressType.html#embed_as/1","title":"Legion.Identity.Information.AddressBook.AddressType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Legion.Identity.Information.AddressBook.AddressType.html#equal?/2","title":"Legion.Identity.Information.AddressBook.AddressType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Legion.Identity.Information.AddressBook.AddressType.html#load/1","title":"Legion.Identity.Information.AddressBook.AddressType.load/1","type":"function"},{"doc":"","ref":"Legion.Identity.Information.AddressBook.AddressType.html#schema/0","title":"Legion.Identity.Information.AddressBook.AddressType.schema/0","type":"function"},{"doc":"","ref":"Legion.Identity.Information.AddressBook.AddressType.html#schemaless_type/0","title":"Legion.Identity.Information.AddressBook.AddressType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Legion.Identity.Information.AddressBook.AddressType.html#type/0","title":"Legion.Identity.Information.AddressBook.AddressType.type/0","type":"function"},{"doc":"","ref":"Legion.Identity.Information.AddressBook.AddressType.html#valid_value?/1","title":"Legion.Identity.Information.AddressBook.AddressType.valid_value?/1","type":"function"},{"doc":"","ref":"Legion.Identity.Information.AddressBook.AddressType.html#t:t/0","title":"Legion.Identity.Information.AddressBook.AddressType.t/0","type":"type"},{"doc":"","ref":"Legion.Identity.Information.Gender.html","title":"Legion.Identity.Information.Gender","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Legion.Identity.Information.Gender.html#cast/1","title":"Legion.Identity.Information.Gender.cast/1","type":"function"},{"doc":"","ref":"Legion.Identity.Information.Gender.html#create_type/0","title":"Legion.Identity.Information.Gender.create_type/0","type":"function"},{"doc":"","ref":"Legion.Identity.Information.Gender.html#drop_type/0","title":"Legion.Identity.Information.Gender.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Legion.Identity.Information.Gender.html#dump/1","title":"Legion.Identity.Information.Gender.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Legion.Identity.Information.Gender.html#embed_as/1","title":"Legion.Identity.Information.Gender.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Legion.Identity.Information.Gender.html#equal?/2","title":"Legion.Identity.Information.Gender.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Legion.Identity.Information.Gender.html#load/1","title":"Legion.Identity.Information.Gender.load/1","type":"function"},{"doc":"","ref":"Legion.Identity.Information.Gender.html#schema/0","title":"Legion.Identity.Information.Gender.schema/0","type":"function"},{"doc":"","ref":"Legion.Identity.Information.Gender.html#schemaless_type/0","title":"Legion.Identity.Information.Gender.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Legion.Identity.Information.Gender.html#type/0","title":"Legion.Identity.Information.Gender.type/0","type":"function"},{"doc":"","ref":"Legion.Identity.Information.Gender.html#valid_value?/1","title":"Legion.Identity.Information.Gender.valid_value?/1","type":"function"},{"doc":"","ref":"Legion.Identity.Information.Gender.html#t:t/0","title":"Legion.Identity.Information.Gender.t/0","type":"type"},{"doc":"ISO-3116 standardized nationalities for the users of the application.","ref":"Legion.Identity.Information.Nationality.html","title":"Legion.Identity.Information.Nationality","type":"module"},{"doc":"","ref":"Legion.Identity.Information.Nationality.html#changeset/2","title":"Legion.Identity.Information.Nationality.changeset/2","type":"function"},{"doc":"Represents personal information of the user.Schema fields:given_name: A name given to a individual to differentiate them from members of such group or family. May be referred as &quot;family name&quot; or &quot;forename&quot;.:middle_name: A name given to a individual to differentiate them from members of such group or family with members having same given name.:family_name: A name given to a individual to represent its family or group.:name_prefix: Prefix of the name to vocal the individual, such as &quot;Mr.&quot;.:name_postfix: Postfix of the name to vocal the individual, such as &quot;-san&quot;, which may expand to something like &quot;Suguro-san&quot;.:nickname: A nick given to an individual, generally pronounced informally.:phonetic_representation: Phonetic representation of the name of the user.:nationality_abbreviation: Nationality of a user, e.g. &quot;sa&quot; for Saudi Arabian.:gender: Gender of a user.","ref":"Legion.Identity.Information.PersonalData.html","title":"Legion.Identity.Information.PersonalData","type":"module"},{"doc":"","ref":"Legion.Identity.Information.PersonalData.html#changeset/2","title":"Legion.Identity.Information.PersonalData.changeset/2","type":"function"},{"doc":"","ref":"Legion.Identity.Information.PersonalData.html#validate_range/3","title":"Legion.Identity.Information.PersonalData.validate_range/3","type":"function"},{"doc":"Represents countries in the world. This model is pregenerated during setup of the application.Schema fields:two_letter: Two-letter code for identifying the country.:three_letter: Variant for two-letter code for identifying the country, but in three letters.:iso_3166: ISO-3166 code for the country.:region: A reference to the region of the country.:subregion: A reference to the subregion of the country.:intermediate_region: A reference to the intermediate region of the country.","ref":"Legion.Identity.Information.Political.Country.html","title":"Legion.Identity.Information.Political.Country","type":"module"},{"doc":"","ref":"Legion.Identity.Information.Political.Country.html#changeset/2","title":"Legion.Identity.Information.Political.Country.changeset/2","type":"function"},{"doc":"","ref":"Legion.Identity.Information.Political.Country.html#does_contain_point?/2","title":"Legion.Identity.Information.Political.Country.does_contain_point?/2","type":"function"},{"doc":"Represents groups of countries found in specific subregions.","ref":"Legion.Identity.Information.Political.IntermediateRegion.html","title":"Legion.Identity.Information.Political.IntermediateRegion","type":"module"},{"doc":"","ref":"Legion.Identity.Information.Political.IntermediateRegion.html#changeset/2","title":"Legion.Identity.Information.Political.IntermediateRegion.changeset/2","type":"function"},{"doc":"Represents political regions of the world.","ref":"Legion.Identity.Information.Political.Region.html","title":"Legion.Identity.Information.Political.Region","type":"module"},{"doc":"","ref":"Legion.Identity.Information.Political.Region.html#changeset/2","title":"Legion.Identity.Information.Political.Region.changeset/2","type":"function"},{"doc":"Represents subparts of political regions.","ref":"Legion.Identity.Information.Political.Subregion.html","title":"Legion.Identity.Information.Political.Subregion","type":"module"},{"doc":"","ref":"Legion.Identity.Information.Political.Subregion.html#changeset/2","title":"Legion.Identity.Information.Political.Subregion.changeset/2","type":"function"},{"doc":"Represents registrations of users.","ref":"Legion.Identity.Information.Registration.html","title":"Legion.Identity.Information.Registration","type":"module"},{"doc":"","ref":"Legion.Identity.Information.Registration.html#changeset/2","title":"Legion.Identity.Information.Registration.changeset/2","type":"function"},{"doc":"The type of the identifier to uniquely reference a user.","ref":"Legion.Identity.Information.Registration.html#t:id/0","title":"Legion.Identity.Information.Registration.id/0","type":"type"},{"doc":"Indicates a Registration struct or a user identifier.Most of the time, the API calls regarding users will use this type.","ref":"Legion.Identity.Information.Registration.html#t:user_or_id/0","title":"Legion.Identity.Information.Registration.user_or_id/0","type":"type"},{"doc":"The type of the name of the user.","ref":"Legion.Identity.Information.Registration.html#t:username/0","title":"Legion.Identity.Information.Registration.username/0","type":"type"},{"doc":"Provides repository functionality for the users.","ref":"Legion.Identity.Information.User.html","title":"Legion.Identity.Information.User","type":"module"},{"doc":"Retrieves the user with the given identifier.Parametersid: Designating identifier value for the user.Return values{:ok, user}: Query succeeded, contains the user.{:error, :not_found}: Query succeeded but user not found.{:error, :einval}: Query failed, invalid parameter.","ref":"Legion.Identity.Information.User.html#get_user/1","title":"Legion.Identity.Information.User.get_user/1","type":"function"},{"doc":"Lists users with the provided pagination parameters.Parameterslimit: Limits the number of the users by the given number. Default is 10, maximum allowed value is 20.offset: Skips the given number of preceding entries in the query. Default is 0.Return values{:ok, users}: Query succeeded, contains list of users.{:error, :einval}: Query failed, invalid parameter.","ref":"Legion.Identity.Information.User.html#list_users/2","title":"Legion.Identity.Information.User.list_users/2","type":"function"},{"doc":"","ref":"Legion.Identity.Telephony.html","title":"Legion.Identity.Telephony","type":"module"},{"doc":"Represents a phone number entry of a user.Schema fields:user_id: The reference of the user that phone number belongs to.:number: The number of the phone.:type: The type of the phone, e.g. &quot;home&quot;, &quot;work&quot;.:ignored?: If true, the phone number will be hidden from transactional endpoints.:safe?: If false, the phone number will not be used in authentication processes.:primed_at: When the user marks the phone number entry as &quot;primary&quot;, this attribute will be updated with a timestamp.:inserted_at: The timestamp user created the entry.Prioritization of entriesPhone number entries can be prioritized by a user, possibly for telephony-related transactional operations. A user may make phone number on a arbitrary moment. If no phone number of a user was made primary, the phone number will be picked according to configuration options. However, no matter what, the rules below for determining the phone number will still apply.If a phone number is primary,the phone number is not ignored,it should have no descendants with a higher insertion timestamp,it should have no descendants with a higher prioritization timestamp,its type is one of &quot;home&quot;, &quot;work&quot;, &quot;mobile&quot;.Rules for prioritizationCertain rules apply for the prioritization of the phone numbers. A phone number entry can be prioritized if and only if,it is not marked as ignored,it is marked as safe.","ref":"Legion.Identity.Telephony.PhoneNumber.html","title":"Legion.Identity.Telephony.PhoneNumber","type":"module"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneNumber.html#changeset/2","title":"Legion.Identity.Telephony.PhoneNumber.changeset/2","type":"function"},{"doc":"A positive integer uniquely identifying a phone number entity.","ref":"Legion.Identity.Telephony.PhoneNumber.html#t:id/0","title":"Legion.Identity.Telephony.PhoneNumber.id/0","type":"type"},{"doc":"Type of the phone number.","ref":"Legion.Identity.Telephony.PhoneNumber.html#t:phone_type/0","title":"Legion.Identity.Telephony.PhoneNumber.phone_type/0","type":"type"},{"doc":"Manages phone numbers of users, performs redirections of phone calls.This module is NOT transaction-safe.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine","type":"module"},{"doc":"Acknowledges phone number. Returns the removed neglection trait.Same as ignore_phone_number/1, but works opposite.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html#acknowledge_phone_number/1","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.acknowledge_phone_number/1","type":"function"},{"doc":"Adds a phone number entry to the user.To get more information about the fields, see Legion.Identity.Telephony.PhoneNumber.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html#create_phone_number/3","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.create_phone_number/3","type":"function"},{"doc":"Returns a boolean value indicating whether the phone number exists.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html#exists?/1","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.exists?/1","type":"function"},{"doc":"Ignores given phone number.Return valuesOn successful operation, this will return {:ok, neglection_trait}.Otherwise,  {:ok, :noop}, if the phone number was already ignored,{:error, :not_found}, if there was no phone number with given identifier.To provide an idempotent interface, you can match this function to {:ok, _}, which will cover all successful flows.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html#ignore_phone_number/2","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.ignore_phone_number/2","type":"function"},{"doc":"Returns a boolean value showing whether the phone number is ignored.Raises Ecto.NoResultsError if no phone number was found with given identifier.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html#ignored?/1","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.ignored?/1","type":"function"},{"doc":"Makes a phone number primary.Return valuesOn successful operation, the function will return {:ok, phone_number}.Otherwise, it returns{:ok, :noop}, if phone number was already safe,{:error, :ignored}, if the phone number was marked as ignored,{:error, :unsafe}, if the phone number was not marked as safe,{:error, :not_found}, if there was no phone number with given identifier,{:error, :no_passphrase}, if there was no passphrase with given identifier.To provide an idempotent interface, you can match this function to {:ok, _}, which will cover all successful flows.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html#make_primary/2","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.make_primary/2","type":"function"},{"doc":"Marks a phone number safe.Options:valid_for: The duration of the new safety trait.Return valuesOn successful operation, this will return {:ok, phone_number}.Otherwise,{:ok, :noop}, if the phone number was already marked as safe,{:error, :not_found}, if there was no phone number with given identifier.To provide an idempotent interface, you can match this function to {:ok, _}, which will cover all successful flows.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html#mark_phone_number_safe/3","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.mark_phone_number_safe/3","type":"function"},{"doc":"Marks a phone number unsafe.Same as mark_phone_number_safe/1, but works opposite.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html#mark_phone_number_unsafe/2","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.mark_phone_number_unsafe/2","type":"function"},{"doc":"Returns a boolean value showing whether the phone number is primary.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html#primary?/1","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.primary?/1","type":"function"},{"doc":"Removes a phone number.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html#remove_phone_number/1","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.remove_phone_number/1","type":"function"},{"doc":"Returns a boolean value indicating whether the phone number is marked as safe.Raises Ecto.NoResultsError if no phone number was found with given identifier.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html#safe?/1","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.safe?/1","type":"function"},{"doc":"Returns a struct representing safety status of the phone number.Raises Ecto.NoResultsError if no phone number was found with given identifier.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html#safe_until/1","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.safe_until/1","type":"function"},{"doc":"Updates the type and number of a phone number entry.","ref":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.html#update_phone_number/3","title":"Legion.Identity.Telephony.PhoneNumber.FiniteStateMachine.update_phone_number/3","type":"function"},{"doc":"Marks a phone number as neglected upon grant.Defines a normalized event sink for neglection actions.Schema fields-:phone_number: The phone number being affected from the neglection trait.:authority: The authority who marked the phone number as ignored.:inserted_at: The timestamp of the neglection action, immutable.","ref":"Legion.Identity.Telephony.PhoneNumber.NeglectionTrait.html","title":"Legion.Identity.Telephony.PhoneNumber.NeglectionTrait","type":"module"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneNumber.NeglectionTrait.html#changeset/2","title":"Legion.Identity.Telephony.PhoneNumber.NeglectionTrait.changeset/2","type":"function"},{"doc":"Prioritizes a phone number upon grant.Defines a normalized event sink for prioritization actions.Schema fields:phone_number: The phone number being affected from the prioritization trait.:authority: The authority who prioritized the phone number.:inserted_at: The timestamp of the prioritization trait, immutable.","ref":"Legion.Identity.Telephony.PhoneNumber.PrioritizationTrait.html","title":"Legion.Identity.Telephony.PhoneNumber.PrioritizationTrait","type":"module"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneNumber.PrioritizationTrait.html#changeset/2","title":"Legion.Identity.Telephony.PhoneNumber.PrioritizationTrait.changeset/2","type":"function"},{"doc":"Marks a phone number as safe for given amount of time.Defines a normalized event sink for trust actions.Schema fields:phone_number: The phone number being affected from the safety trait.:authority: The authority who created the safety trait.:valid_for: The duration the safety trait is valid for, in seconds.:inserted_at: The timestamp of the safety trait, immutable.","ref":"Legion.Identity.Telephony.PhoneNumber.SafetyTrait.html","title":"Legion.Identity.Telephony.PhoneNumber.SafetyTrait","type":"module"},{"doc":"Invalidates a safety trait immediately.This is useful for marking a phone number, counted safe at the time, as unsafe.","ref":"Legion.Identity.Telephony.PhoneNumber.SafetyTrait.Invalidation.html","title":"Legion.Identity.Telephony.PhoneNumber.SafetyTrait.Invalidation","type":"module"},{"doc":"A view for the prioritization traits filtering only valid ones.","ref":"Legion.Identity.Telephony.PhoneNumber.ValidPrioritizationTrait.html","title":"Legion.Identity.Telephony.PhoneNumber.ValidPrioritizationTrait","type":"module"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneNumber.ValidPrioritizationTrait.html#create_view/0","title":"Legion.Identity.Telephony.PhoneNumber.ValidPrioritizationTrait.create_view/0","type":"function"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneNumber.ValidPrioritizationTrait.html#drop_view/0","title":"Legion.Identity.Telephony.PhoneNumber.ValidPrioritizationTrait.drop_view/0","type":"function"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneNumber.ValidPrioritizationTrait.html#migrate/0","title":"Legion.Identity.Telephony.PhoneNumber.ValidPrioritizationTrait.migrate/0","type":"function"},{"doc":"A view for the safety traits of phone numbers filtering only valid ones.","ref":"Legion.Identity.Telephony.PhoneNumber.ValidSafetyTrait.html","title":"Legion.Identity.Telephony.PhoneNumber.ValidSafetyTrait","type":"module"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneNumber.ValidSafetyTrait.html#create_view/0","title":"Legion.Identity.Telephony.PhoneNumber.ValidSafetyTrait.create_view/0","type":"function"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneNumber.ValidSafetyTrait.html#drop_view/0","title":"Legion.Identity.Telephony.PhoneNumber.ValidSafetyTrait.drop_view/0","type":"function"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneNumber.ValidSafetyTrait.html#migrate/0","title":"Legion.Identity.Telephony.PhoneNumber.ValidSafetyTrait.migrate/0","type":"function"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneType.html","title":"Legion.Identity.Telephony.PhoneType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Legion.Identity.Telephony.PhoneType.html#cast/1","title":"Legion.Identity.Telephony.PhoneType.cast/1","type":"function"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneType.html#create_type/0","title":"Legion.Identity.Telephony.PhoneType.create_type/0","type":"function"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneType.html#drop_type/0","title":"Legion.Identity.Telephony.PhoneType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Legion.Identity.Telephony.PhoneType.html#dump/1","title":"Legion.Identity.Telephony.PhoneType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Legion.Identity.Telephony.PhoneType.html#embed_as/1","title":"Legion.Identity.Telephony.PhoneType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Legion.Identity.Telephony.PhoneType.html#equal?/2","title":"Legion.Identity.Telephony.PhoneType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Legion.Identity.Telephony.PhoneType.html#load/1","title":"Legion.Identity.Telephony.PhoneType.load/1","type":"function"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneType.html#schema/0","title":"Legion.Identity.Telephony.PhoneType.schema/0","type":"function"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneType.html#schemaless_type/0","title":"Legion.Identity.Telephony.PhoneType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Legion.Identity.Telephony.PhoneType.html#type/0","title":"Legion.Identity.Telephony.PhoneType.type/0","type":"function"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneType.html#valid_value?/1","title":"Legion.Identity.Telephony.PhoneType.valid_value?/1","type":"function"},{"doc":"","ref":"Legion.Identity.Telephony.PhoneType.html#t:t/0","title":"Legion.Identity.Telephony.PhoneType.t/0","type":"type"},{"doc":"Represents a locale, containing a language and its variant.This is a registry-only module, it is not available to be mutated at the runtime.","ref":"Legion.Internationalization.Locale.html","title":"Legion.Internationalization.Locale","type":"module"},{"doc":"","ref":"Legion.Internationalization.Locale.html#changeset/2","title":"Legion.Internationalization.Locale.changeset/2","type":"function"},{"doc":"Provides functions and data structures for two-dimensional coordinates.","ref":"Legion.Location.Coordinate.html","title":"Legion.Location.Coordinate","type":"module"},{"doc":"Represents a two-dimensional coordinate on surface.","ref":"Legion.Location.Coordinate.html#t:t/0","title":"Legion.Location.Coordinate.t/0","type":"type"},{"doc":"Represents information about a location geocode. A geocode is a locational estimation of a location identified by a connection artifact or such. The data can be mostly used to analytic purposes, rather than transactional operations.","ref":"Legion.Location.Geocode.html","title":"Legion.Location.Geocode","type":"module"},{"doc":"Returns a new empty geocode.Examplesiex&gt; Legion.Location.Geocode.new() %Legion.Location.Geocode{location: nil, country_name: nil, country_code: nil, metro_code: nil, region_code: nil, region_name: nil, time_zone: nil, zip_code: nil, geocoder: nil, channel: nil, meta: %{}, timestamp: nil}","ref":"Legion.Location.Geocode.html#new/0","title":"Legion.Location.Geocode.new/0","type":"function"},{"doc":"Shows the method of the retrieval of geocode data.","ref":"Legion.Location.Geocode.html#t:channel/0","title":"Legion.Location.Geocode.channel/0","type":"type"},{"doc":"Represents information about a location.Fields:location: Roughly estimated location for the geocode.:country_name: Name of the country, e.g. &quot;Turkey&quot;.:country_code: Code of the country, e.g. &quot;TR&quot;.:metro_code: Metro code.:region_code: Code of the region, e.g. &quot;34&quot;.:region_name: Name of the region, e.g. &quot;Istanbul&quot;.:time_zone: Time zone of the location, e.g. &quot;Europe/Istanbul&quot;.:zip_code: Zip code of the location, e.g. &quot;34134&quot;.:geocoder: The toolchain used to create the geocode.:channel: The channel used as a metaartifact of the geocode.:meta: Additional metadata given by the geocoder.:timestamp: The time of the geocoding lookup.","ref":"Legion.Location.Geocode.html#t:t/0","title":"Legion.Location.Geocode.t/0","type":"type"},{"doc":"Represents a localization entry to make the template available in such language/region.","ref":"Legion.Messaging.Localization.Entry.html","title":"Legion.Messaging.Localization.Entry","type":"module"},{"doc":"","ref":"Legion.Messaging.Localization.Entry.html#changeset/2","title":"Legion.Messaging.Localization.Entry.changeset/2","type":"function"},{"doc":"Represents a message requested to be sent to user(s) using a messaging medium.","ref":"Legion.Messaging.Message.html","title":"Legion.Messaging.Message","type":"module"},{"doc":"Validates changeset with given params.Caveats:body and :medium fields are required to build a valid changeset.:subject is required if selected :medium is not :sms.","ref":"Legion.Messaging.Message.html#changeset/2","title":"Legion.Messaging.Message.changeset/2","type":"function"},{"doc":"Returns true if term is a medium atom (i.e. :apm, :push).Allowed in guard tests. Inlined by the compiler.Examplesiex&gt; Legion.Messaging.Message.is_medium(:apm) true iex&gt; Legion.Messaging.Message.is_medium(:platform) true iex&gt; Legion.Messaging.Message.is_medium(&lt;&lt;1::3&gt;&gt;) false iex&gt; Legion.Messaging.Message.is_medium(&quot;apm&quot;) false","ref":"Legion.Messaging.Message.html#is_medium/1","title":"Legion.Messaging.Message.is_medium/1","type":"macro"},{"doc":"A medium to send the message by.Values:apm: Platform-native push services (i.e. Apple Push Notification Service - APNS, Google Cloud Messaging - GCM, Microsoft Push Notification Service - MPNS, Windows Push Notification Services - WPN). See Legion.Messaging.Medium.APM for more information.:push: Pseudo-push using local push APIs of devices. Might not be supported on all devices.:mailing: Sends email using email services.:sms: Push using Smart Message Service (SMS).:platform: Sends message using real-time messaging system.","ref":"Legion.Messaging.Message.html#t:medium/0","title":"Legion.Messaging.Message.medium/0","type":"type"},{"doc":"","ref":"Legion.Messaging.Message.Medium.html","title":"Legion.Messaging.Message.Medium","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Legion.Messaging.Message.Medium.html#cast/1","title":"Legion.Messaging.Message.Medium.cast/1","type":"function"},{"doc":"","ref":"Legion.Messaging.Message.Medium.html#create_type/0","title":"Legion.Messaging.Message.Medium.create_type/0","type":"function"},{"doc":"","ref":"Legion.Messaging.Message.Medium.html#drop_type/0","title":"Legion.Messaging.Message.Medium.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Legion.Messaging.Message.Medium.html#dump/1","title":"Legion.Messaging.Message.Medium.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Legion.Messaging.Message.Medium.html#embed_as/1","title":"Legion.Messaging.Message.Medium.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Legion.Messaging.Message.Medium.html#equal?/2","title":"Legion.Messaging.Message.Medium.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Legion.Messaging.Message.Medium.html#load/1","title":"Legion.Messaging.Message.Medium.load/1","type":"function"},{"doc":"","ref":"Legion.Messaging.Message.Medium.html#schema/0","title":"Legion.Messaging.Message.Medium.schema/0","type":"function"},{"doc":"","ref":"Legion.Messaging.Message.Medium.html#schemaless_type/0","title":"Legion.Messaging.Message.Medium.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Legion.Messaging.Message.Medium.html#type/0","title":"Legion.Messaging.Message.Medium.type/0","type":"function"},{"doc":"","ref":"Legion.Messaging.Message.Medium.html#valid_value?/1","title":"Legion.Messaging.Message.Medium.valid_value?/1","type":"function"},{"doc":"","ref":"Legion.Messaging.Message.Medium.html#t:t/0","title":"Legion.Messaging.Message.Medium.t/0","type":"type"},{"doc":"Defines a recipient relationship of a message.","ref":"Legion.Messaging.Message.Recipient.html","title":"Legion.Messaging.Message.Recipient","type":"module"},{"doc":"","ref":"Legion.Messaging.Message.Recipient.html#changeset/2","title":"Legion.Messaging.Message.Recipient.changeset/2","type":"function"},{"doc":"Bounded to a message upon receiving a success callback from the integrated service.","ref":"Legion.Messaging.Message.SuccessInformation.html","title":"Legion.Messaging.Message.SuccessInformation","type":"module"},{"doc":"","ref":"Legion.Messaging.Message.SuccessInformation.html#changeset/2","title":"Legion.Messaging.Message.SuccessInformation.changeset/2","type":"function"},{"doc":"Represents a template usage reference.","ref":"Legion.Messaging.Message.TemplateUsage.html","title":"Legion.Messaging.Message.TemplateUsage","type":"module"},{"doc":"","ref":"Legion.Messaging.Message.TemplateUsage.html#changeset/2","title":"Legion.Messaging.Message.TemplateUsage.changeset/2","type":"function"},{"doc":"Manages global settings for registry modules.CaveatsInstead of using functions of this module directly, to retrieve or alter the settings at runtime, use delegating functions supplied by relevant modules.","ref":"Legion.Messaging.Settings.html","title":"Legion.Messaging.Settings","type":"module"},{"doc":"Retrieves the value of the setting identified by given key, or returns default if there was no value registered (yet).","ref":"Legion.Messaging.Settings.html#get/2","title":"Legion.Messaging.Settings.get/2","type":"function"},{"doc":"Changes the value of the setting identified by given key, to the new value value, on behalf of user authority.","ref":"Legion.Messaging.Settings.html#put/3","title":"Legion.Messaging.Settings.put/3","type":"function"},{"doc":"Takes the last quantity entries for the given key.","ref":"Legion.Messaging.Settings.html#take/2","title":"Legion.Messaging.Settings.take/2","type":"function"},{"doc":"Defines a settings register.","ref":"Legion.Messaging.Settings.Register.html","title":"Legion.Messaging.Settings.Register","type":"module"},{"doc":"","ref":"Legion.Messaging.Settings.Register.html#changeset/2","title":"Legion.Messaging.Settings.Register.changeset/2","type":"function"},{"doc":"Configures runtime configurable settings.","ref":"Legion.Messaging.Settings.RegistryEntry.html","title":"Legion.Messaging.Settings.RegistryEntry","type":"module"},{"doc":"","ref":"Legion.Messaging.Settings.RegistryEntry.html#changeset/2","title":"Legion.Messaging.Settings.RegistryEntry.changeset/2","type":"function"},{"doc":"Provides functions for altering/retrieving global switches to messaging.This module is NOT transaction-safe.Enabling/disabling mediumsSuppose you need to disable the a medium globally. You might use enable_medium/2 and disable_medium/2 functions to alter the runtime configuration.enable_medium(some_user_or_id, :apm) disable_medium(some_user_or_id, :apm)Or, rather you can use convenience macros if you require them in your module.require Legion.Messaging.Switching.Globals enable_apm_medium(some_user_or_id) disable_apm_medium(some_user_or_id)Notice that, the underlying implementation will not insert a new registry entry if value for the setting has not changed. Hence, calling those functions multiple times will not perform any write operation.Redirecting a medium to another mediumSometimes you may want to redirect a messaging medium to another medium, probably due to cost reduction and integration maintenance.You can redirect a medium to another medium with the following call.redirect_medium(some_user_or_id, :mailing, :apm, for: 3_600)The above API call will redirect all mailing messages to APM medium. However, while sending a message, you might opt for restricting redirections on such operations.send_sms_message(some_user_or_id, &quot;this is the message&quot;, redirection: :restrict)The message will not be sent to the user no matter what, what is more, it will throw an error to the user.Some messages, like one-time-codes, should not be redirected to another medium. The user of the messaging API can also force the actual medium to be run instead of redirection.send_sms_message(some_user_or_id, &quot;some pretty otc&quot;, redirection: :ignore)If there was a redirection, it will be ignored, although the same rules for enabling/disabling medium for the actual medium will be still applied.","ref":"Legion.Messaging.Switching.Globals.html","title":"Legion.Messaging.Switching.Globals","type":"module"},{"doc":"Cancels redirection setting currently applied for specified medium.Examplesredirect_medium(user_or_id, :apm, :mailing, for: 3_600) # redirects APM medium to mailing medium for an hour cancel_redirection_for_medium(user_or_id, :apm) # all redirections for the APM medium are now cancelledSee redirect_medium/4 for making redirections.","ref":"Legion.Messaging.Switching.Globals.html#cancel_redirection_for_medium/2","title":"Legion.Messaging.Switching.Globals.cancel_redirection_for_medium/2","type":"function"},{"doc":"Disables in-platform messaging medium.This macro curries the disable_medium/2 function with corresponding medium.","ref":"Legion.Messaging.Switching.Globals.html#disable_apm_medium/1","title":"Legion.Messaging.Switching.Globals.disable_apm_medium/1","type":"macro"},{"doc":"Disables mailing medium.This macro curries the disable_medium/2 function with corresponding medium.","ref":"Legion.Messaging.Switching.Globals.html#disable_mailing_medium/1","title":"Legion.Messaging.Switching.Globals.disable_mailing_medium/1","type":"macro"},{"doc":"Disables given medium globally.","ref":"Legion.Messaging.Switching.Globals.html#disable_medium/2","title":"Legion.Messaging.Switching.Globals.disable_medium/2","type":"function"},{"doc":"Disables in-platform messaging medium.This macro curries the disable_medium/2 function with corresponding medium.","ref":"Legion.Messaging.Switching.Globals.html#disable_platform_medium/1","title":"Legion.Messaging.Switching.Globals.disable_platform_medium/1","type":"macro"},{"doc":"Disables push medium.This macro curries the disable_medium/2 function with corresponding medium.","ref":"Legion.Messaging.Switching.Globals.html#disable_push_medium/1","title":"Legion.Messaging.Switching.Globals.disable_push_medium/1","type":"macro"},{"doc":"Disables SMS medium.This macro curries the disable_medium/2 function with corresponding medium.","ref":"Legion.Messaging.Switching.Globals.html#disable_sms_medium/1","title":"Legion.Messaging.Switching.Globals.disable_sms_medium/1","type":"macro"},{"doc":"Enables APM medium.This macro curries the enable_medium/2 function with corresponding medium.","ref":"Legion.Messaging.Switching.Globals.html#enable_apm_medium/1","title":"Legion.Messaging.Switching.Globals.enable_apm_medium/1","type":"macro"},{"doc":"Enables mailing medium.This macro curries the enable_medium/2 function with corresponding medium.","ref":"Legion.Messaging.Switching.Globals.html#enable_mailing_medium/1","title":"Legion.Messaging.Switching.Globals.enable_mailing_medium/1","type":"macro"},{"doc":"Enables given medium globally.","ref":"Legion.Messaging.Switching.Globals.html#enable_medium/2","title":"Legion.Messaging.Switching.Globals.enable_medium/2","type":"function"},{"doc":"Enables platform medium.This macro curries the enable_medium/2 function with corresponding medium.","ref":"Legion.Messaging.Switching.Globals.html#enable_platform_medium/1","title":"Legion.Messaging.Switching.Globals.enable_platform_medium/1","type":"macro"},{"doc":"Enables push medium.This macro curries the enable_medium/2 function with corresponding medium.","ref":"Legion.Messaging.Switching.Globals.html#enable_push_medium/1","title":"Legion.Messaging.Switching.Globals.enable_push_medium/1","type":"macro"},{"doc":"Enables SMS medium.This macro curries the enable_medium/2 function with corresponding medium.","ref":"Legion.Messaging.Switching.Globals.html#enable_sms_medium/1","title":"Legion.Messaging.Switching.Globals.enable_sms_medium/1","type":"macro"},{"doc":"Returns a boolean value indicating if medium is enabled globally.","ref":"Legion.Messaging.Switching.Globals.html#is_medium_enabled?/1","title":"Legion.Messaging.Switching.Globals.is_medium_enabled?/1","type":"function"},{"doc":"Returns true if given medium is redirected currently, otherwise false.","ref":"Legion.Messaging.Switching.Globals.html#is_medium_redirected?/1","title":"Legion.Messaging.Switching.Globals.is_medium_redirected?/1","type":"function"},{"doc":"Redirects a medium to another medium.Examplesredirect_medium(user_id, :apm, :push) # redirects APM medium to push medium redirect_medium(user_id, :apm, :platform) # redirects APM medium to platform mediumTimed redirectionsYou may also redirect a medium to another medium for a given amount of time.redirect_medium(user_id, :apm, :push, for: 3_600) # redirects APM medium to push medium for an hourDeferring redirectionsRedirections could be also deferred for a given amount of time.redirect_medium(user_id, :apm, :push, after: 3_600) # redirects APM medium to push medium after an hourRedirections could be both deferred and timed. The following usage implies both applications.redirect_medium(user_id, :apm, :push, after: 3_600, for: 6_400) # same redirection, but active after an hour for two hoursNote that redirections can override each other. The user interface for performing redirections should prompt whether the user is aware of overriding an existing redirection.redirect_medium(user_id, :apm, :push) # redirects APM medium to push medium redirect_medium(user_id, :apm, :mailing, for: 3_600) # redirects APM medium to mailing medium for an hour, afterwards push redirection will be active until further cancellationSee cancel_redirection_for_medium/3 for cancelling redirections.","ref":"Legion.Messaging.Switching.Globals.html#redirect_medium/4","title":"Legion.Messaging.Switching.Globals.redirect_medium/4","type":"function"},{"doc":"Returns the redirection medium for the medium in given timestamp, if it is redirected. Otherwise, returns nil.","ref":"Legion.Messaging.Switching.Globals.html#redirection_for_medium/2","title":"Legion.Messaging.Switching.Globals.redirection_for_medium/2","type":"function"},{"doc":"Provides functions for altering/retrieving messaging preferences of users.","ref":"Legion.Messaging.Switching.UserPreferences.html","title":"Legion.Messaging.Switching.UserPreferences","type":"module"},{"doc":"Functions for templatization of parametric messages.A message can be parametrized using a supported templating language (i.e. Liquid). Parameterized messages can be sent to multiple platform users, with variadic subjects and bodies. Recipients of a templated message are enumerated over the message subject and body. The parameters for a certain user are injected during sending a message.Templatized messages can be sent using any messaging medium, same rules available for messaging apply for the templatized messages.Creating a message templateAssume that we want to create an email template to send a terms of conditions change notification to the users.subject_template = &quot;&quot;&quot; Changes in Terms of Conditions by {{ date }} &quot;&quot;&quot; body_template = &quot;&quot;&quot; &lt;!doctype html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;{{ subject }}&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h6&gt;Dear, {{ recipient.name }}&lt;/h6&gt; &lt;p&gt;Our Terms of Conditions are changed.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &quot;&quot;&quot; {:ok, template} = template_from_string owner, &quot;toc change&quot;, subject_template, body_template, mediums: [:mailing] recipient_ids = [1, 5, 7] {:ok, result} = send_mail(recipient_ids, template)Here, we are creating two template strings using Liquid templating language. The subject template uses the data attribute; which is a localized, human readable date format (i.e. January 5, 2017). The body template uses the subject attribute, which is the evaluated result of subject template. Finally, we define the available push methods for this particular template, here it is available for mailing medium.","ref":"Legion.Messaging.Templatization.html","title":"Legion.Messaging.Templatization","type":"module"},{"doc":"Represents the rendering result of templatized text.","ref":"Legion.Messaging.Templatization.RenderingResult.html","title":"Legion.Messaging.Templatization.RenderingResult","type":"module"},{"doc":"The rendering result of templatization.Fields:subject: Subject rendering of the message.:body: Body rendering of the message.","ref":"Legion.Messaging.Templatization.RenderingResult.html#t:t/0","title":"Legion.Messaging.Templatization.RenderingResult.t/0","type":"type"},{"doc":"Provides persistence logic for templatization of parametric messages sent to the platform users.","ref":"Legion.Messaging.Templatization.Template.html","title":"Legion.Messaging.Templatization.Template","type":"module"},{"doc":"","ref":"Legion.Messaging.Templatization.Template.html#changeset/2","title":"Legion.Messaging.Templatization.Template.changeset/2","type":"function"},{"doc":"Functions for dealing with Elixir naming conventions &amp; module syntax.This module uses Phoenix.Naming functions.","ref":"Legion.Meta.Naming.html","title":"Legion.Meta.Naming","type":"module"},{"doc":"Converts String to camel case.Takes an optional :lower option to return lowerCamelCase.In addition to the implementation of Phoenix.Naming, this function also accepts atom() inputs.iex&gt; Legion.Meta.Naming.camelize(&quot;some_fixture&quot;) &quot;SomeFixture&quot; iex&gt; Legion.Meta.Naming.camelize(:some_fixture) &quot;SomeFixture&quot; iex&gt; Legion.Meta.Naming.camelize(&quot;SomeFixture&quot;) &quot;SomeFixture&quot; iex&gt; Legion.Meta.Naming.camelize(:&quot;SomeFixture&quot;) &quot;SomeFixture&quot; iex&gt; Legion.Meta.Naming.camelize(&quot;some_fixture&quot;, :lower) &quot;someFixture&quot; iex&gt; Legion.Meta.Naming.camelize(:some_fixture, :lower) &quot;someFixture&quot; iex&gt; Legion.Meta.Naming.camelize(:&quot;SomeFixture&quot;, :lower) &quot;someFixture&quot;","ref":"Legion.Meta.Naming.html#camelize/1","title":"Legion.Meta.Naming.camelize/1","type":"function"},{"doc":"","ref":"Legion.Meta.Naming.html#camelize/2","title":"Legion.Meta.Naming.camelize/2","type":"function"},{"doc":"See Phoenix.Naming.humanize/1.","ref":"Legion.Meta.Naming.html#humanize/1","title":"Legion.Meta.Naming.humanize/1","type":"function"},{"doc":"See Phoenix.Naming.underscore/1.","ref":"Legion.Meta.Naming.html#underscore/1","title":"Legion.Meta.Naming.underscore/1","type":"function"},{"doc":"See Phoenix.Naming.unsuffix/2.","ref":"Legion.Meta.Naming.html#unsuffix/2","title":"Legion.Meta.Naming.unsuffix/2","type":"function"},{"doc":"Definitions for user agents of HTTP clients.","ref":"Legion.Networking.HTTP.UserAgent.html","title":"Legion.Networking.HTTP.UserAgent","type":"module"},{"doc":"","ref":"Legion.Networking.HTTP.UserAgent.html#parse/1","title":"Legion.Networking.HTTP.UserAgent.parse/1","type":"function"},{"doc":"Describes a user agent.","ref":"Legion.Networking.HTTP.UserAgent.html#t:t/0","title":"Legion.Networking.HTTP.UserAgent.t/0","type":"type"},{"doc":"Provides functions and types for INET data structures.","ref":"Legion.Networking.INET.html","title":"Legion.Networking.INET","type":"module"},{"doc":"","ref":"Legion.Networking.INET.html#validate_addr/1","title":"Legion.Networking.INET.validate_addr/1","type":"function"},{"doc":"","ref":"Legion.Networking.INET.html#t:error_type/0","title":"Legion.Networking.INET.error_type/0","type":"type"},{"doc":"Type of the IP address.","ref":"Legion.Networking.INET.html#t:t/0","title":"Legion.Networking.INET.t/0","type":"type"},{"doc":"Reverse geocoding support for the INET addresses.","ref":"Legion.Networking.INET.Geocoding.html","title":"Legion.Networking.INET.Geocoding","type":"module"},{"doc":"Traces an INET address using IP reverse geocoding service.","ref":"Legion.Networking.INET.Geocoding.html#trace/1","title":"Legion.Networking.INET.Geocoding.trace/1","type":"function"},{"doc":"Provides metaprogramming tools to register singleton directories.MotivationGlobal settings directories can be used to gather runtime configuration. One can create a configuration to change the behavior of some modules, or enable/disable it through utility functions.Suppose you have a function, enable_some_feature/0, to enable a feature at the runtime of the application. To define a backend for this feature in persistence layer, you can leverage registry directories.RegistriesTo create a registry directory with a module named SomeSettings, one may use the defregdir/2 provided by this module.import Legion.RegistryDirectory defregdir SomeSettings, &quot;messaging_settings&quot;Upon that call, the macro resolves for defining three modules, namelySomeSettings.Register,SomeSettings.RegistryEntry andSomeSettings.The first two modules are valid Ecto schemas, you can query them directly.Repo.all(SomeSettings.Register) # returns all of the register keysAlthough it is strictly discouraged, you are also able to query the SomeSettings.RegistryEntry schema.Retrieving/manipulating settingsThe main module, SomeSettings (which was provided to the macro), exports functions for retrieving and manipulating the settings. The functionality expects an authenticated user, or its identifier to perform a manipulation settings (i.e. creating a new entry). The settings do not override each other, but bucketed as an event source, hence you may provide additional features (i.e. deferral, duration), which might likely need more than the last entry created.Adding registersRegisters can be added at build time, and can be constantly referenced by the other tables. The macro does not perform a migration for the database, indeed, but you can prepare migrations for both key registration and table creation.For synchronization of the keys, see Legion.RegistryDirectory.Synchronization.","ref":"Legion.RegistryDirectory.html","title":"Legion.RegistryDirectory","type":"module"},{"doc":"Defines a registration directory, resolving to several modules.{namespace}.Register: An Ecto schema using string keys to refer to the registers.{namespace}.RegistryEntry: An Ecto schema holds JSON data for a specific key.{namespace}: Module providing utility functions for manipulating the registry.The macro also makes use of a base table name, provided by the second parameter, which will resolve to two table names in database, &quot;{namespace}_registers&quot; and &quot;{namespace}_registry_entries&quot;, for the two Ecto schemas, respectively.","ref":"Legion.RegistryDirectory.html#defregdir/2","title":"Legion.RegistryDirectory.defregdir/2","type":"macro"},{"doc":"Synchronization support for managing registry keys.Creating a synchronization taskA synchronization module can help for creating keys, and checking them at the time of the migration. If all keys do exist, running the task should be no-op.defmodule Mix.Tasks.Foo.Reg.Birds do use Legion.RegistryDirectory.Synchronization, site: Foo.Birds, repo: Foo.Repo @shortdoc &quot;Synchronizes bird registers&quot; require Logger alias Foo.Repo alias Foo.Birds.Register def register(key), do: Repo.insert(%Register{key: key}) def sync do register &quot;hummingbird&quot; register &quot;auk&quot; register &quot;blackbird&quot; register &quot;chickadee&quot; register &quot;dove&quot; register &quot;duck&quot; register &quot;nuthatch&quot; register &quot;seabird&quot; end end","ref":"Legion.RegistryDirectory.Synchronization.html","title":"Legion.RegistryDirectory.Synchronization","type":"module"},{"doc":"","ref":"Legion.Repo.html","title":"Legion.Repo","type":"module"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3.","ref":"Legion.Repo.html#aggregate/3","title":"Legion.Repo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4.","ref":"Legion.Repo.html#aggregate/4","title":"Legion.Repo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2.","ref":"Legion.Repo.html#all/2","title":"Legion.Repo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2.","ref":"Legion.Repo.html#checkout/2","title":"Legion.Repo.checkout/2","type":"function"},{"doc":"","ref":"Legion.Repo.html#child_spec/1","title":"Legion.Repo.child_spec/1","type":"function"},{"doc":"Provides an Ecto.Repo for database connections.","ref":"Legion.Repo.html#config/0","title":"Legion.Repo.config/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.default_options/1.","ref":"Legion.Repo.html#default_options/1","title":"Legion.Repo.default_options/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2.","ref":"Legion.Repo.html#delete/2","title":"Legion.Repo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2.","ref":"Legion.Repo.html#delete!/2","title":"Legion.Repo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2.","ref":"Legion.Repo.html#delete_all/2","title":"Legion.Repo.delete_all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2.","ref":"Legion.Repo.html#exists?/2","title":"Legion.Repo.exists?/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar depending on the adapter to obtain statistics for the given query.See Ecto.Adapters.SQL.explain/4 for more information.","ref":"Legion.Repo.html#explain/3","title":"Legion.Repo.explain/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3.","ref":"Legion.Repo.html#get/3","title":"Legion.Repo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3.","ref":"Legion.Repo.html#get!/3","title":"Legion.Repo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3.","ref":"Legion.Repo.html#get_by/3","title":"Legion.Repo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3.","ref":"Legion.Repo.html#get_by!/3","title":"Legion.Repo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0.","ref":"Legion.Repo.html#get_dynamic_repo/0","title":"Legion.Repo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0.","ref":"Legion.Repo.html#in_transaction?/0","title":"Legion.Repo.in_transaction?/0","type":"function"},{"doc":"Dynamically loads the repository url from the DATABASE_URL environment variable.","ref":"Legion.Repo.html#init/2","title":"Legion.Repo.init/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2.","ref":"Legion.Repo.html#insert/2","title":"Legion.Repo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2.","ref":"Legion.Repo.html#insert!/2","title":"Legion.Repo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3.","ref":"Legion.Repo.html#insert_all/3","title":"Legion.Repo.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2.","ref":"Legion.Repo.html#insert_or_update/2","title":"Legion.Repo.insert_or_update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2.","ref":"Legion.Repo.html#insert_or_update!/2","title":"Legion.Repo.insert_or_update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2.","ref":"Legion.Repo.html#load/2","title":"Legion.Repo.load/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2.","ref":"Legion.Repo.html#one/2","title":"Legion.Repo.one/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2.","ref":"Legion.Repo.html#one!/2","title":"Legion.Repo.one!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3.","ref":"Legion.Repo.html#preload/3","title":"Legion.Repo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.prepare_query/3.","ref":"Legion.Repo.html#prepare_query/3","title":"Legion.Repo.prepare_query/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1.","ref":"Legion.Repo.html#put_dynamic_repo/1","title":"Legion.Repo.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query/4 for more information.","ref":"Legion.Repo.html#query/3","title":"Legion.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.See Ecto.Adapters.SQL.query!/4 for more information.","ref":"Legion.Repo.html#query!/3","title":"Legion.Repo.query!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload/2.","ref":"Legion.Repo.html#reload/2","title":"Legion.Repo.reload/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload!/2.","ref":"Legion.Repo.html#reload!/2","title":"Legion.Repo.reload!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1.","ref":"Legion.Repo.html#rollback/1","title":"Legion.Repo.rollback/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1.","ref":"Legion.Repo.html#start_link/1","title":"Legion.Repo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1.","ref":"Legion.Repo.html#stop/1","title":"Legion.Repo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2.","ref":"Legion.Repo.html#stream/2","title":"Legion.Repo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL.See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"Legion.Repo.html#to_sql/2","title":"Legion.Repo.to_sql/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2.","ref":"Legion.Repo.html#transaction/2","title":"Legion.Repo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2.","ref":"Legion.Repo.html#update/2","title":"Legion.Repo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2.","ref":"Legion.Repo.html#update!/2","title":"Legion.Repo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3.","ref":"Legion.Repo.html#update_all/3","title":"Legion.Repo.update_all/3","type":"function"},{"doc":"Defines stereotypes for the modules of the application.","ref":"Legion.Stereotype.html","title":"Legion.Stereotype","type":"module"},{"doc":"When used, dispatch to the appropriate stereotype.","ref":"Legion.Stereotype.html#__using__/1","title":"Legion.Stereotype.__using__/1","type":"macro"},{"doc":"","ref":"Legion.Stereotype.html#model/0","title":"Legion.Stereotype.model/0","type":"function"},{"doc":"","ref":"Legion.Stereotype.html#service/0","title":"Legion.Stereotype.service/0","type":"function"},{"doc":"","ref":"Legion.Stereotype.html#singleton/0","title":"Legion.Stereotype.singleton/0","type":"function"},{"doc":"","ref":"Legion.Stereotype.html#viewdecl/0","title":"Legion.Stereotype.viewdecl/0","type":"function"},{"doc":"","ref":"Legion.Stereotype.html#virtual/0","title":"Legion.Stereotype.virtual/0","type":"function"},{"doc":"","ref":"Legion.Stereotype.ViewDecl.html","title":"Legion.Stereotype.ViewDecl","type":"module"},{"doc":"","ref":"Legion.Stereotype.ViewDecl.html#create/1","title":"Legion.Stereotype.ViewDecl.create/1","type":"macro"},{"doc":"","ref":"Legion.Stereotype.ViewDecl.html#drop/1","title":"Legion.Stereotype.ViewDecl.drop/1","type":"macro"},{"doc":"Declares types and utility functions for working with phone numbers.","ref":"Legion.Telephony.PhoneNumber.html","title":"Legion.Telephony.PhoneNumber","type":"module"},{"doc":"Returns the type of the phone number.Examplesiex&gt; Legion.Telephony.PhoneNumber.get_number_type(&quot;+90 532 111 1111&quot;) {:ok, :mobile} iex&gt; Legion.Telephony.PhoneNumber.get_number_type(&quot;+90 216 111 1111&quot;) {:ok, :fixed_line} iex&gt; Legion.Telephony.PhoneNumber.get_number_type(&quot;test&quot;) {:error, :invalid}","ref":"Legion.Telephony.PhoneNumber.html#get_number_type/1","title":"Legion.Telephony.PhoneNumber.get_number_type/1","type":"function"},{"doc":"Same as humanize/2, but uses :international formatting as default.Examplesiex&gt; Legion.Telephony.PhoneNumber.humanize(&quot;+905321111111&quot;) {:ok, &quot;+90 532 111 11 11&quot;} iex&gt; Legion.Telephony.PhoneNumber.humanize(&quot;test&quot;) {:error, :invalid}","ref":"Legion.Telephony.PhoneNumber.html#humanize/1","title":"Legion.Telephony.PhoneNumber.humanize/1","type":"function"},{"doc":"Humanizes the phone number in given format. format parameter can be either :international or :national, determining the existence of country code in resulting phone number.Examplesiex&gt; Legion.Telephony.PhoneNumber.humanize(&quot;+905321111111&quot;, :international) {:ok, &quot;+90 532 111 11 11&quot;} iex&gt; Legion.Telephony.PhoneNumber.humanize(&quot;+905321111111&quot;, :national) {:ok, &quot;0532 111 11 11&quot;} iex&gt; Legion.Telephony.PhoneNumber.humanize(&quot;test&quot;, :national) {:error, :invalid}","ref":"Legion.Telephony.PhoneNumber.html#humanize/2","title":"Legion.Telephony.PhoneNumber.humanize/2","type":"function"},{"doc":"Returns a boolean value indicating the possibility of validity of the given phone number. Unlike is_valid_number/2, this function validates the phone number by bare lookup of its length.iex&gt; Legion.Telephony.PhoneNumber.is_possible_number?(&quot;+905321111111&quot;) true iex&gt; Legion.Telephony.PhoneNumber.is_possible_number?(&quot;test&quot;) false","ref":"Legion.Telephony.PhoneNumber.html#is_possible_number?/1","title":"Legion.Telephony.PhoneNumber.is_possible_number?/1","type":"function"},{"doc":"Determines validity of the given phone number.iex&gt; Legion.Telephony.PhoneNumber.is_valid_number?(&quot;+905321111111&quot;) true iex&gt; Legion.Telephony.PhoneNumber.is_valid_number?(&quot;test&quot;) false","ref":"Legion.Telephony.PhoneNumber.html#is_valid_number?/1","title":"Legion.Telephony.PhoneNumber.is_valid_number?/1","type":"function"},{"doc":"Converts given number to E164-formatted string.Examplesiex&gt; Legion.Telephony.PhoneNumber.to_e164(&quot;+90 532 111 1111&quot;) {:ok, &quot;+905321111111&quot;} iex&gt; Legion.Telephony.PhoneNumber.to_e164(&quot;test&quot;) {:error, :invalid}","ref":"Legion.Telephony.PhoneNumber.html#to_e164/1","title":"Legion.Telephony.PhoneNumber.to_e164/1","type":"function"},{"doc":"Converts given number to RFC 3966-formatted string.iex&gt; Legion.Telephony.PhoneNumber.to_rfc3966(&quot;+90 532 111 1111&quot;) {:ok, &quot;tel:+90-532-111-11-11&quot;} iex&gt; Legion.Telephony.PhoneNumber.to_rfc3966(&quot;test&quot;) {:error, :invalid}","ref":"Legion.Telephony.PhoneNumber.html#to_rfc3966/1","title":"Legion.Telephony.PhoneNumber.to_rfc3966/1","type":"function"},{"doc":"Describes the type of the phone number.","ref":"Legion.Telephony.PhoneNumber.html#t:host_type/0","title":"Legion.Telephony.PhoneNumber.host_type/0","type":"type"},{"doc":"Type for the phone number.","ref":"Legion.Telephony.PhoneNumber.html#t:t/0","title":"Legion.Telephony.PhoneNumber.t/0","type":"type"},{"doc":"Provides utility functions and a behaviour for injecting external templating engines.","ref":"Legion.Templating.Renderer.html","title":"Legion.Templating.Renderer","type":"behaviour"},{"doc":"Derives parameters from given template, which will create a strict validation schema.","ref":"Legion.Templating.Renderer.html#c:derive_params/1","title":"Legion.Templating.Renderer.derive_params/1","type":"callback"},{"doc":"","ref":"Legion.Templating.Renderer.html#provide_implementation/1","title":"Legion.Templating.Renderer.provide_implementation/1","type":"function"},{"doc":"Renders a string from given template and parameters.","ref":"Legion.Templating.Renderer.html#c:render/2","title":"Legion.Templating.Renderer.render/2","type":"callback"},{"doc":"Type specification for engine-defining atoms.","ref":"Legion.Templating.Renderer.html#t:engine/0","title":"Legion.Templating.Renderer.engine/0","type":"type"},{"doc":"","ref":"Legion.Templating.Renderer.Engine.html","title":"Legion.Templating.Renderer.Engine","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Legion.Templating.Renderer.Engine.html#cast/1","title":"Legion.Templating.Renderer.Engine.cast/1","type":"function"},{"doc":"","ref":"Legion.Templating.Renderer.Engine.html#create_type/0","title":"Legion.Templating.Renderer.Engine.create_type/0","type":"function"},{"doc":"","ref":"Legion.Templating.Renderer.Engine.html#drop_type/0","title":"Legion.Templating.Renderer.Engine.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Legion.Templating.Renderer.Engine.html#dump/1","title":"Legion.Templating.Renderer.Engine.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Legion.Templating.Renderer.Engine.html#embed_as/1","title":"Legion.Templating.Renderer.Engine.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Legion.Templating.Renderer.Engine.html#equal?/2","title":"Legion.Templating.Renderer.Engine.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Legion.Templating.Renderer.Engine.html#load/1","title":"Legion.Templating.Renderer.Engine.load/1","type":"function"},{"doc":"","ref":"Legion.Templating.Renderer.Engine.html#schema/0","title":"Legion.Templating.Renderer.Engine.schema/0","type":"function"},{"doc":"","ref":"Legion.Templating.Renderer.Engine.html#schemaless_type/0","title":"Legion.Templating.Renderer.Engine.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Legion.Templating.Renderer.Engine.html#type/0","title":"Legion.Templating.Renderer.Engine.type/0","type":"function"},{"doc":"","ref":"Legion.Templating.Renderer.Engine.html#valid_value?/1","title":"Legion.Templating.Renderer.Engine.valid_value?/1","type":"function"},{"doc":"","ref":"Legion.Templating.Renderer.Engine.html#t:t/0","title":"Legion.Templating.Renderer.Engine.t/0","type":"type"},{"doc":"Provides stereotype for modules implementing templating engines.Exampledefmodule Legion.Templating.Engines.SomeEngine do use Legion.Templating.Renderer.EngineStereotype @impl Legion.Templating.Renderer @spec render(template :: String.t, params :: any()) :: {:ok, String.t} | {:error, atom()} def render(template, params) do {:ok, &quot;rendered string&quot;} end end","ref":"Legion.Templating.Renderer.EngineStereotype.html","title":"Legion.Templating.Renderer.EngineStereotype","type":"module"},{"doc":"Support for using Ecto with :cidr fields.","ref":"Legion.Types.CIDR.html","title":"Legion.Types.CIDR","type":"module"},{"doc":"Handles casting to Postgrex.INET.","ref":"Legion.Types.CIDR.html#cast/1","title":"Legion.Types.CIDR.cast/1","type":"function"},{"doc":"Converts from native Ecto representation to a binary.","ref":"Legion.Types.CIDR.html#decode/1","title":"Legion.Types.CIDR.decode/1","type":"function"},{"doc":"Converts to the native Ecto representation.","ref":"Legion.Types.CIDR.html#dump/1","title":"Legion.Types.CIDR.dump/1","type":"function"},{"doc":"Defines an embedding format for the object.","ref":"Legion.Types.CIDR.html#embed_as/1","title":"Legion.Types.CIDR.embed_as/1","type":"function"},{"doc":"Compares two objects of this type.","ref":"Legion.Types.CIDR.html#equal?/2","title":"Legion.Types.CIDR.equal?/2","type":"function"},{"doc":"Loads from the native Ecto representation.","ref":"Legion.Types.CIDR.html#load/1","title":"Legion.Types.CIDR.load/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Legion.Types.CIDR.html#type/0","title":"Legion.Types.CIDR.type/0","type":"function"},{"doc":"Support for using Ecto with :inet fields.","ref":"Legion.Types.INET.html","title":"Legion.Types.INET","type":"module"},{"doc":"Handles casting to Postgrex.INET.","ref":"Legion.Types.INET.html#cast/1","title":"Legion.Types.INET.cast/1","type":"function"},{"doc":"Converts from native Ecto representation to a binary.","ref":"Legion.Types.INET.html#decode/1","title":"Legion.Types.INET.decode/1","type":"function"},{"doc":"Converts to the native Ecto representation.","ref":"Legion.Types.INET.html#dump/1","title":"Legion.Types.INET.dump/1","type":"function"},{"doc":"Defines an embedding format for the object.","ref":"Legion.Types.INET.html#embed_as/1","title":"Legion.Types.INET.embed_as/1","type":"function"},{"doc":"Compares two objects of this type.","ref":"Legion.Types.INET.html#equal?/2","title":"Legion.Types.INET.equal?/2","type":"function"},{"doc":"Loads from the native Ecto representation.","ref":"Legion.Types.INET.html#load/1","title":"Legion.Types.INET.load/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Legion.Types.INET.html#type/0","title":"Legion.Types.INET.type/0","type":"function"},{"doc":"Support for using Ecto with :point fields.","ref":"Legion.Types.Point.html","title":"Legion.Types.Point","type":"module"},{"doc":"Handles casting to Postgrex.Point.","ref":"Legion.Types.Point.html#cast/1","title":"Legion.Types.Point.cast/1","type":"function"},{"doc":"Converts from native Ecto representation to a binary.","ref":"Legion.Types.Point.html#decode/1","title":"Legion.Types.Point.decode/1","type":"function"},{"doc":"Converts to the native Ecto representation.","ref":"Legion.Types.Point.html#dump/1","title":"Legion.Types.Point.dump/1","type":"function"},{"doc":"Defines an embedding format for the object.","ref":"Legion.Types.Point.html#embed_as/1","title":"Legion.Types.Point.embed_as/1","type":"function"},{"doc":"Compares two objects of this type.","ref":"Legion.Types.Point.html#equal?/2","title":"Legion.Types.Point.equal?/2","type":"function"},{"doc":"Loads from the native Ecto representation.","ref":"Legion.Types.Point.html#load/1","title":"Legion.Types.Point.load/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Legion.Types.Point.html#type/0","title":"Legion.Types.Point.type/0","type":"function"},{"doc":"Checks whether the timezone of the database is UTC.","ref":"Mix.Tasks.Legion.Check.Timezone.html","title":"Mix.Tasks.Legion.Check.Timezone","type":"task"},{"doc":"Registers locales to the repository.","ref":"Mix.Tasks.Legion.Reg.Locale.html","title":"Mix.Tasks.Legion.Reg.Locale","type":"task"},{"doc":"Callback implementation for Mix.Task.run/1.","ref":"Mix.Tasks.Legion.Reg.Locale.html#run/1","title":"Mix.Tasks.Legion.Reg.Locale.run/1","type":"function"},{"doc":"Synchronizes messaging subsystem registers, such as global switches and redirection keys.Redirection keys are formatted in &quot;Messaging.Switching.Globals.{medium}_redirection&quot;, whereas switching keys are formatted in &quot;Messaging.Switching.Globals.is_{medium}_enabled?&quot; pattern.","ref":"Mix.Tasks.Legion.Reg.Messaging.html","title":"Mix.Tasks.Legion.Reg.Messaging","type":"task"},{"doc":"","ref":"Mix.Tasks.Legion.Reg.Messaging.html#register/1","title":"Mix.Tasks.Legion.Reg.Messaging.register/1","type":"function"},{"doc":"Callback implementation for Mix.Task.run/1.","ref":"Mix.Tasks.Legion.Reg.Messaging.html#run/1","title":"Mix.Tasks.Legion.Reg.Messaging.run/1","type":"function"},{"doc":"","ref":"Mix.Tasks.Legion.Reg.Messaging.html#sync/0","title":"Mix.Tasks.Legion.Reg.Messaging.sync/0","type":"function"},{"doc":"Registers nationalities to the repository.","ref":"Mix.Tasks.Legion.Reg.Nationality.html","title":"Mix.Tasks.Legion.Reg.Nationality","type":"task"},{"doc":"","ref":"Mix.Tasks.Legion.Reg.Nationality.html#put_nationality/5","title":"Mix.Tasks.Legion.Reg.Nationality.put_nationality/5","type":"function"},{"doc":"Callback implementation for Mix.Task.run/1.","ref":"Mix.Tasks.Legion.Reg.Nationality.html#run/1","title":"Mix.Tasks.Legion.Reg.Nationality.run/1","type":"function"},{"doc":"","ref":"Mix.Tasks.Legion.Reg.Nationality.html#sync/0","title":"Mix.Tasks.Legion.Reg.Nationality.sync/0","type":"function"},{"doc":"Registers nationalities to the repository.","ref":"Mix.Tasks.Legion.Reg.Political.html","title":"Mix.Tasks.Legion.Reg.Political","type":"task"},{"doc":"","ref":"Mix.Tasks.Legion.Reg.Political.html#put_country/7","title":"Mix.Tasks.Legion.Reg.Political.put_country/7","type":"function"},{"doc":"","ref":"Mix.Tasks.Legion.Reg.Political.html#put_intermediate_region/4","title":"Mix.Tasks.Legion.Reg.Political.put_intermediate_region/4","type":"function"},{"doc":"","ref":"Mix.Tasks.Legion.Reg.Political.html#put_region/2","title":"Mix.Tasks.Legion.Reg.Political.put_region/2","type":"function"},{"doc":"","ref":"Mix.Tasks.Legion.Reg.Political.html#put_subregion/3","title":"Mix.Tasks.Legion.Reg.Political.put_subregion/3","type":"function"},{"doc":"Callback implementation for Mix.Task.run/1.","ref":"Mix.Tasks.Legion.Reg.Political.html#run/1","title":"Mix.Tasks.Legion.Reg.Political.run/1","type":"function"},{"doc":"","ref":"Mix.Tasks.Legion.Reg.Political.html#sync/0","title":"Mix.Tasks.Legion.Reg.Political.sync/0","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.AccessControl.ControllerAction.html","title":"Legion.Identity.Auth.AccessControl.ControllerAction","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1.","ref":"Legion.Identity.Auth.AccessControl.ControllerAction.html#cast/1","title":"Legion.Identity.Auth.AccessControl.ControllerAction.cast/1","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.AccessControl.ControllerAction.html#create_type/0","title":"Legion.Identity.Auth.AccessControl.ControllerAction.create_type/0","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.AccessControl.ControllerAction.html#drop_type/0","title":"Legion.Identity.Auth.AccessControl.ControllerAction.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1.","ref":"Legion.Identity.Auth.AccessControl.ControllerAction.html#dump/1","title":"Legion.Identity.Auth.AccessControl.ControllerAction.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1.","ref":"Legion.Identity.Auth.AccessControl.ControllerAction.html#embed_as/1","title":"Legion.Identity.Auth.AccessControl.ControllerAction.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2.","ref":"Legion.Identity.Auth.AccessControl.ControllerAction.html#equal?/2","title":"Legion.Identity.Auth.AccessControl.ControllerAction.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1.","ref":"Legion.Identity.Auth.AccessControl.ControllerAction.html#load/1","title":"Legion.Identity.Auth.AccessControl.ControllerAction.load/1","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.AccessControl.ControllerAction.html#schema/0","title":"Legion.Identity.Auth.AccessControl.ControllerAction.schema/0","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.AccessControl.ControllerAction.html#schemaless_type/0","title":"Legion.Identity.Auth.AccessControl.ControllerAction.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0.","ref":"Legion.Identity.Auth.AccessControl.ControllerAction.html#type/0","title":"Legion.Identity.Auth.AccessControl.ControllerAction.type/0","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.AccessControl.ControllerAction.html#valid_value?/1","title":"Legion.Identity.Auth.AccessControl.ControllerAction.valid_value?/1","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.AccessControl.ControllerAction.html#t:t/0","title":"Legion.Identity.Auth.AccessControl.ControllerAction.t/0","type":"type"},{"doc":"Permissions.","ref":"Legion.Identity.Auth.AccessControl.Permission.html","title":"Legion.Identity.Auth.AccessControl.Permission","type":"module"},{"doc":"","ref":"Legion.Identity.Auth.AccessControl.Permission.html#changeset/2","title":"Legion.Identity.Auth.AccessControl.Permission.changeset/2","type":"function"},{"doc":"Contains a group of permissions to enhance ease of usage.","ref":"Legion.Identity.Auth.AccessControl.PermissionSet.html","title":"Legion.Identity.Auth.AccessControl.PermissionSet","type":"module"},{"doc":"","ref":"Legion.Identity.Auth.AccessControl.PermissionSet.html#changeset/2","title":"Legion.Identity.Auth.AccessControl.PermissionSet.changeset/2","type":"function"},{"doc":"Caching-related functions for permission sets of users.MotivationCalculating permission set of a user on current time is pretty common in the lifetime of an application. However, despite its straightforwardness, its a time-taking task to do since there might be lots of data involved. The resulting data could be cached and reused in further queries.Materialization of the calculationPermission set caching is implemented with the technical background utilizing MOSI, MOESI and Illinois protocols, one-legged MOSI might be a reference. After current permission set is calculated for a user, it is written to the database in Original state. On a change affecting the cache, it is invalidated by changing the state to Invalid.","ref":"Legion.Identity.Auth.AccessControl.PermissionSetCache.html","title":"Legion.Identity.Auth.AccessControl.PermissionSetCache","type":"module"},{"doc":"Fetches the cached entry for the user with given identifier.","ref":"Legion.Identity.Auth.AccessControl.PermissionSetCache.html#fetch/1","title":"Legion.Identity.Auth.AccessControl.PermissionSetCache.fetch/1","type":"function"},{"doc":"Represents an entity for the permission set cache.","ref":"Legion.Identity.Auth.AccessControl.PermissionSetCacheEntry.html","title":"Legion.Identity.Auth.AccessControl.PermissionSetCacheEntry","type":"module"},{"doc":"","ref":"Legion.Identity.Auth.AccessControl.PermissionSetCacheEntry.html#changeset/2","title":"Legion.Identity.Auth.AccessControl.PermissionSetCacheEntry.changeset/2","type":"function"},{"doc":"Represents grant of a permission set to a user.A grant action is formed with a permission set, a grantee and an authority.Time invarianceA permission set might have valid_after and valid_for values in second units. The valid_after field determines the time of activation in terms of seconds passed after creation of the grant. On the other hand, grants might be available for some time interval, which is determined with valid_for field.Briefly, the grant will be activated on inserted_at + valid_after. At the end, the grant will be ceased on inserted_at + valid_after + valid_for.Caching coherenceAfter a succesful insertion of permission set grant, the permission set retrieval cache will be invalidated, which will incur a performance penalty at the time of the initial grant resolution.","ref":"Legion.Identity.Auth.AccessControl.PermissionSetGrant.html","title":"Legion.Identity.Auth.AccessControl.PermissionSetGrant","type":"module"},{"doc":"","ref":"Legion.Identity.Auth.AccessControl.PermissionSetGrant.html#changeset/2","title":"Legion.Identity.Auth.AccessControl.PermissionSetGrant.changeset/2","type":"function"},{"doc":"","ref":"Legion.Identity.Auth.AccessControl.PermissionSetGrant.html#validate/1","title":"Legion.Identity.Auth.AccessControl.PermissionSetGrant.validate/1","type":"function"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on.This can be used in your application as:use Legion.HTTP, :controller use Legion.HTTP, :viewThe definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases.Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"Legion.HTTP.html","title":"Legion.HTTP","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"Legion.HTTP.html#__using__/1","title":"Legion.HTTP.__using__/1","type":"macro"},{"doc":"","ref":"Legion.HTTP.html#channel/0","title":"Legion.HTTP.channel/0","type":"function"},{"doc":"","ref":"Legion.HTTP.html#controller/0","title":"Legion.HTTP.controller/0","type":"function"},{"doc":"","ref":"Legion.HTTP.html#router/0","title":"Legion.HTTP.router/0","type":"function"},{"doc":"","ref":"Legion.HTTP.html#view/0","title":"Legion.HTTP.view/0","type":"function"},{"doc":"The HTTP web server interface application service.It runs the web interface working with JSON endpoints with the business logic managed by main application.","ref":"Legion.HTTP.Application.html","title":"Legion.HTTP.Application","type":"module"},{"doc":"Callback implementation for Application.config_change/3.","ref":"Legion.HTTP.Application.html#config_change/3","title":"Legion.HTTP.Application.config_change/3","type":"function"},{"doc":"Callback implementation for Application.start/2.","ref":"Legion.HTTP.Application.html#start/2","title":"Legion.HTTP.Application.start/2","type":"function"},{"doc":"Provides a common error traverser for displaying errors found in changesets.","ref":"Legion.HTTP.Common.ChangesetView.html","title":"Legion.HTTP.Common.ChangesetView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Legion.HTTP.Common.ChangesetView.html#__resource__/0","title":"Legion.HTTP.Common.ChangesetView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Legion.HTTP.Common.ChangesetView.html#render/2","title":"Legion.HTTP.Common.ChangesetView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Legion.HTTP.Common.ChangesetView.html#template_not_found/2","title":"Legion.HTTP.Common.ChangesetView.template_not_found/2","type":"function"},{"doc":"Traverses and translates changeset errors. See Ecto.Changeset.traverse_errors/2 and Legion.HTTP.ErrorHelpers.translate_error/1 for more details.","ref":"Legion.HTTP.Common.ChangesetView.html#translate_errors/1","title":"Legion.HTTP.Common.ChangesetView.translate_errors/1","type":"function"},{"doc":"Handles fallback actions of controllers.","ref":"Legion.HTTP.Common.FallbackController.html","title":"Legion.HTTP.Common.FallbackController","type":"module"},{"doc":"A fallback handler to handle Ecto errors encoded as changesets.","ref":"Legion.HTTP.Common.FallbackController.html#call/2","title":"Legion.HTTP.Common.FallbackController.call/2","type":"function"},{"doc":"","ref":"Legion.HTTP.Endpoint.html","title":"Legion.HTTP.Endpoint","type":"module"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast/3.","ref":"Legion.HTTP.Endpoint.html#broadcast/3","title":"Legion.HTTP.Endpoint.broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast!/3.","ref":"Legion.HTTP.Endpoint.html#broadcast!/3","title":"Legion.HTTP.Endpoint.broadcast!/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from/4.","ref":"Legion.HTTP.Endpoint.html#broadcast_from/4","title":"Legion.HTTP.Endpoint.broadcast_from/4","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.broadcast_from!/4.","ref":"Legion.HTTP.Endpoint.html#broadcast_from!/4","title":"Legion.HTTP.Endpoint.broadcast_from!/4","type":"function"},{"doc":"Callback implementation for Plug.call/2.","ref":"Legion.HTTP.Endpoint.html#call/2","title":"Legion.HTTP.Endpoint.call/2","type":"function"},{"doc":"Returns the child specification to start the endpoint under a supervision tree.","ref":"Legion.HTTP.Endpoint.html#child_spec/1","title":"Legion.HTTP.Endpoint.child_spec/1","type":"function"},{"doc":"Returns the endpoint configuration for keyReturns default if the key does not exist.","ref":"Legion.HTTP.Endpoint.html#config/2","title":"Legion.HTTP.Endpoint.config/2","type":"function"},{"doc":"Reloads the configuration given the application environment changes.","ref":"Legion.HTTP.Endpoint.html#config_change/2","title":"Legion.HTTP.Endpoint.config_change/2","type":"function"},{"doc":"Returns the host for the given endpoint.","ref":"Legion.HTTP.Endpoint.html#host/0","title":"Legion.HTTP.Endpoint.host/0","type":"function"},{"doc":"Callback implementation for Plug.init/1.","ref":"Legion.HTTP.Endpoint.html#init/1","title":"Legion.HTTP.Endpoint.init/1","type":"function"},{"doc":"Callback invoked for dynamically configuring the endpoint.It receives the endpoint configuration and checks if configuration should be loaded from the system environment.","ref":"Legion.HTTP.Endpoint.html#init/2","title":"Legion.HTTP.Endpoint.init/2","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast/3.","ref":"Legion.HTTP.Endpoint.html#local_broadcast/3","title":"Legion.HTTP.Endpoint.local_broadcast/3","type":"function"},{"doc":"Callback implementation for Phoenix.Endpoint.local_broadcast_from/4.","ref":"Legion.HTTP.Endpoint.html#local_broadcast_from/4","title":"Legion.HTTP.Endpoint.local_broadcast_from/4","type":"function"},{"doc":"Generates the path information when routing to this endpoint.","ref":"Legion.HTTP.Endpoint.html#path/1","title":"Legion.HTTP.Endpoint.path/1","type":"function"},{"doc":"Generates the script name.","ref":"Legion.HTTP.Endpoint.html#script_name/0","title":"Legion.HTTP.Endpoint.script_name/0","type":"function"},{"doc":"Starts the endpoint supervision tree.","ref":"Legion.HTTP.Endpoint.html#start_link/1","title":"Legion.HTTP.Endpoint.start_link/1","type":"function"},{"doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file in priv/static. Meant to be used for Subresource Integrity with CDNs.","ref":"Legion.HTTP.Endpoint.html#static_integrity/1","title":"Legion.HTTP.Endpoint.static_integrity/1","type":"function"},{"doc":"Returns a two item tuple with the first item being the static_path and the second item being the static_integrity.","ref":"Legion.HTTP.Endpoint.html#static_lookup/1","title":"Legion.HTTP.Endpoint.static_lookup/1","type":"function"},{"doc":"Generates a route to a static file in priv/static.","ref":"Legion.HTTP.Endpoint.html#static_path/1","title":"Legion.HTTP.Endpoint.static_path/1","type":"function"},{"doc":"Generates the static URL without any path information.It uses the configuration under :static_url to generate such. It falls back to :url if :static_url is not set.","ref":"Legion.HTTP.Endpoint.html#static_url/0","title":"Legion.HTTP.Endpoint.static_url/0","type":"function"},{"doc":"Generates the endpoint base URL but as a URI struct.It uses the configuration under :url to generate such. Useful for manipulating the URL data and passing it to URL helpers.","ref":"Legion.HTTP.Endpoint.html#struct_url/0","title":"Legion.HTTP.Endpoint.struct_url/0","type":"function"},{"doc":"","ref":"Legion.HTTP.Endpoint.html#subscribe/2","title":"Legion.HTTP.Endpoint.subscribe/2","type":"function"},{"doc":"","ref":"Legion.HTTP.Endpoint.html#unsubscribe/1","title":"Legion.HTTP.Endpoint.unsubscribe/1","type":"function"},{"doc":"Generates the endpoint base URL without any path information.It uses the configuration under :url to generate such.","ref":"Legion.HTTP.Endpoint.html#url/0","title":"Legion.HTTP.Endpoint.url/0","type":"function"},{"doc":"Conveniences for translating and building error messages.","ref":"Legion.HTTP.ErrorHelpers.html","title":"Legion.HTTP.ErrorHelpers","type":"module"},{"doc":"Translates an error message using gettext.","ref":"Legion.HTTP.ErrorHelpers.html#translate_error/1","title":"Legion.HTTP.ErrorHelpers.translate_error/1","type":"function"},{"doc":"","ref":"Legion.HTTP.ErrorView.html","title":"Legion.HTTP.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Legion.HTTP.ErrorView.html#__resource__/0","title":"Legion.HTTP.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Legion.HTTP.ErrorView.html#render/2","title":"Legion.HTTP.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Legion.HTTP.ErrorView.html#template_not_found/2","title":"Legion.HTTP.ErrorView.template_not_found/2","type":"function"},{"doc":"A module providing Internationalization with a gettext-based API.By using Gettext, your module gains a set of macros for translations, for example:import Legion.HTTP.Gettext # Simple translation gettext &quot;Here is the string to translate&quot; # Plural translation ngettext &quot;Here is the string to translate&quot;, &quot;Here are the strings to translate&quot;, 3 # Domain-based translation dgettext &quot;errors&quot;, &quot;Here is the error message to translate&quot;See the Gettext Docs for detailed usage.","ref":"Legion.HTTP.Gettext.html","title":"Legion.HTTP.Gettext","type":"module"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3.","ref":"Legion.HTTP.Gettext.html#dgettext/3","title":"Legion.HTTP.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2.","ref":"Legion.HTTP.Gettext.html#dgettext_noop/2","title":"Legion.HTTP.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5.","ref":"Legion.HTTP.Gettext.html#dngettext/5","title":"Legion.HTTP.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3.","ref":"Legion.HTTP.Gettext.html#dngettext_noop/3","title":"Legion.HTTP.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4.","ref":"Legion.HTTP.Gettext.html#dpgettext/4","title":"Legion.HTTP.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"Legion.HTTP.Gettext.html#dpgettext_noop/3","title":"Legion.HTTP.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6.","ref":"Legion.HTTP.Gettext.html#dpngettext/6","title":"Legion.HTTP.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"Legion.HTTP.Gettext.html#dpngettext_noop/4","title":"Legion.HTTP.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2.","ref":"Legion.HTTP.Gettext.html#gettext/2","title":"Legion.HTTP.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1.","ref":"Legion.HTTP.Gettext.html#gettext_comment/1","title":"Legion.HTTP.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1.","ref":"Legion.HTTP.Gettext.html#gettext_noop/1","title":"Legion.HTTP.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2.","ref":"Legion.HTTP.Gettext.html#handle_missing_bindings/2","title":"Legion.HTTP.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/6.","ref":"Legion.HTTP.Gettext.html#handle_missing_plural_translation/6","title":"Legion.HTTP.Gettext.handle_missing_plural_translation/6","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/4.","ref":"Legion.HTTP.Gettext.html#handle_missing_translation/4","title":"Legion.HTTP.Gettext.handle_missing_translation/4","type":"function"},{"doc":"","ref":"Legion.HTTP.Gettext.html#lgettext/5","title":"Legion.HTTP.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"Legion.HTTP.Gettext.html#lngettext/7","title":"Legion.HTTP.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4.","ref":"Legion.HTTP.Gettext.html#ngettext/4","title":"Legion.HTTP.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2.","ref":"Legion.HTTP.Gettext.html#ngettext_noop/2","title":"Legion.HTTP.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3.","ref":"Legion.HTTP.Gettext.html#pgettext/3","title":"Legion.HTTP.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"Legion.HTTP.Gettext.html#pgettext_noop/2","title":"Legion.HTTP.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5.","ref":"Legion.HTTP.Gettext.html#pngettext/5","title":"Legion.HTTP.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"Legion.HTTP.Gettext.html#pngettext_noop/3","title":"Legion.HTTP.Gettext.pngettext_noop/3","type":"macro"},{"doc":"Starts the authentication process of a user with an HTTP interface.","ref":"Legion.HTTP.Identity.Auth.SignIn.InstantiationController.html","title":"Legion.HTTP.Identity.Auth.SignIn.InstantiationController","type":"module"},{"doc":"","ref":"Legion.HTTP.Identity.Auth.SignIn.InstantiationController.html#create/2","title":"Legion.HTTP.Identity.Auth.SignIn.InstantiationController.create/2","type":"function"},{"doc":"Renders responses and errors for the sign in process.","ref":"Legion.HTTP.Identity.Auth.SignInView.html","title":"Legion.HTTP.Identity.Auth.SignInView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Legion.HTTP.Identity.Auth.SignInView.html#__resource__/0","title":"Legion.HTTP.Identity.Auth.SignInView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Legion.HTTP.Identity.Auth.SignInView.html#render/2","title":"Legion.HTTP.Identity.Auth.SignInView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Legion.HTTP.Identity.Auth.SignInView.html#template_not_found/2","title":"Legion.HTTP.Identity.Auth.SignInView.template_not_found/2","type":"function"},{"doc":"Registers users from internal API or external services.","ref":"Legion.HTTP.Identity.Auth.SignUp.RegistrationController.html","title":"Legion.HTTP.Identity.Auth.SignUp.RegistrationController","type":"module"},{"doc":"","ref":"Legion.HTTP.Identity.Auth.SignUp.RegistrationController.html#create/2","title":"Legion.HTTP.Identity.Auth.SignUp.RegistrationController.create/2","type":"function"},{"doc":"Renders a map with given registration info.","ref":"Legion.HTTP.Identity.Auth.SignUp.RegistrationView.html","title":"Legion.HTTP.Identity.Auth.SignUp.RegistrationView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"Legion.HTTP.Identity.Auth.SignUp.RegistrationView.html#__resource__/0","title":"Legion.HTTP.Identity.Auth.SignUp.RegistrationView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"Legion.HTTP.Identity.Auth.SignUp.RegistrationView.html#render/2","title":"Legion.HTTP.Identity.Auth.SignUp.RegistrationView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"Legion.HTTP.Identity.Auth.SignUp.RegistrationView.html#template_not_found/2","title":"Legion.HTTP.Identity.Auth.SignUp.RegistrationView.template_not_found/2","type":"function"},{"doc":"Provides a health check route.","ref":"Legion.HTTP.Nonclassified.HealthCheckController.html","title":"Legion.HTTP.Nonclassified.HealthCheckController","type":"module"},{"doc":"","ref":"Legion.HTTP.Nonclassified.HealthCheckController.html#peek/2","title":"Legion.HTTP.Nonclassified.HealthCheckController.peek/2","type":"function"},{"doc":"","ref":"Legion.HTTP.Router.html","title":"Legion.HTTP.Router","type":"module"},{"doc":"","ref":"Legion.HTTP.Router.html#api/2","title":"Legion.HTTP.Router.api/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"Legion.HTTP.Router.html#call/2","title":"Legion.HTTP.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"Legion.HTTP.Router.html#init/1","title":"Legion.HTTP.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from Legion.HTTP.Router.","ref":"Legion.HTTP.Router.Helpers.html","title":"Legion.HTTP.Router.Helpers","type":"module"},{"doc":"","ref":"Legion.HTTP.Router.Helpers.html#health_check_path/2","title":"Legion.HTTP.Router.Helpers.health_check_path/2","type":"function"},{"doc":"","ref":"Legion.HTTP.Router.Helpers.html#health_check_path/3","title":"Legion.HTTP.Router.Helpers.health_check_path/3","type":"function"},{"doc":"","ref":"Legion.HTTP.Router.Helpers.html#health_check_url/2","title":"Legion.HTTP.Router.Helpers.health_check_url/2","type":"function"},{"doc":"","ref":"Legion.HTTP.Router.Helpers.html#health_check_url/3","title":"Legion.HTTP.Router.Helpers.health_check_url/3","type":"function"},{"doc":"","ref":"Legion.HTTP.Router.Helpers.html#instantiation_path/2","title":"Legion.HTTP.Router.Helpers.instantiation_path/2","type":"function"},{"doc":"","ref":"Legion.HTTP.Router.Helpers.html#instantiation_path/3","title":"Legion.HTTP.Router.Helpers.instantiation_path/3","type":"function"},{"doc":"","ref":"Legion.HTTP.Router.Helpers.html#instantiation_url/2","title":"Legion.HTTP.Router.Helpers.instantiation_url/2","type":"function"},{"doc":"","ref":"Legion.HTTP.Router.Helpers.html#instantiation_url/3","title":"Legion.HTTP.Router.Helpers.instantiation_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"Legion.HTTP.Router.Helpers.html#path/2","title":"Legion.HTTP.Router.Helpers.path/2","type":"function"},{"doc":"","ref":"Legion.HTTP.Router.Helpers.html#registration_path/2","title":"Legion.HTTP.Router.Helpers.registration_path/2","type":"function"},{"doc":"","ref":"Legion.HTTP.Router.Helpers.html#registration_path/3","title":"Legion.HTTP.Router.Helpers.registration_path/3","type":"function"},{"doc":"","ref":"Legion.HTTP.Router.Helpers.html#registration_url/2","title":"Legion.HTTP.Router.Helpers.registration_url/2","type":"function"},{"doc":"","ref":"Legion.HTTP.Router.Helpers.html#registration_url/3","title":"Legion.HTTP.Router.Helpers.registration_url/3","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"Legion.HTTP.Router.Helpers.html#static_integrity/2","title":"Legion.HTTP.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"Legion.HTTP.Router.Helpers.html#static_path/2","title":"Legion.HTTP.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"Legion.HTTP.Router.Helpers.html#static_url/2","title":"Legion.HTTP.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"Legion.HTTP.Router.Helpers.html#url/1","title":"Legion.HTTP.Router.Helpers.url/1","type":"function"},{"doc":"Converts native timestamp units to endpoint-to-endpoint compatible format.","ref":"Legion.HTTP.Utils.DateConversion.html","title":"Legion.HTTP.Utils.DateConversion","type":"module"},{"doc":"","ref":"Legion.HTTP.Utils.DateConversion.html#put_date/1","title":"Legion.HTTP.Utils.DateConversion.put_date/1","type":"function"},{"doc":"Up and runningAuthor: Buğra EkukluRevision historyInitial draft, 18-06-14, Buğra Ekuklu.","ref":"up-and-running.html","title":"Up and running","type":"extras"},{"doc":"To run Legion, you need to have following applications running.NameVersionDocker imageHostAdditional informationPostgreSQL10.4postgrespostgres:5432WebsiteFreegeoip3.5.0fiorix/freegeoipfiorix-freegeoip:8080WebsiteLegion connects to those applications with respective hostnames. It is recommended to install those applications as Docker services.Elixir 1.6.5 or laterThe application is written in Elixir, you might check out instructions here to install it. If you are installed Elixir and using it for the first time, you will need to install Hex.pm package manager. Hex.pm is necessary to install all of the application dependencies for the Legion. You may run the following command to install it, or update the local Mix task.$ mix local.hex --forceErlang 20 or laterElixir code compiles to Erlang byte code, which runs on a virtual machine called BEAM. Our application is also dependent to few Erlang libraries, compiled by the Rebar3 build tool. Similarly to installing Hex.pm, you might install local Mix task for Rebar3 with the following command.$ mix local.rebar --force","ref":"up-and-running.html#prerequisites","title":"Up and running - Prerequisites","type":"extras"},{"doc":"Dependencies can be installed by using Hex.pm package manager and Rebar3 build tool. To install those tools and the dependencies of the application, you may run the following.$ mix deps.get","ref":"up-and-running.html#installing-dependencies","title":"Up and running - Installing dependencies","type":"extras"},{"doc":"Legion needs to execute certain actions in the environment to operate. Those actions contain database migrations, bootstrapping etc. You need to run setup script for once to run the application.$ mix legion.setupThe command will create the database, insert the registrations, perform the migrations and finally download datasets for particular features (i.e. IP reverse geocoding).Setting up the PostgreSQLLegion handles migrations, and all other types of schema manipulations automatically. However, you might need to set the proper timezone in its configuration file, since our application uses naive date-times (timestamps without timezones) to persist server-side created time codes.In postgresql.conf, you will need to change following entries to respective values to set the default timezone for the database to UTC.log_timezone = &#39;UTC&#39; timezone = &#39;UTC&#39;Afterwards, you should restart the PostgreSQL server to make changes in effect.","ref":"up-and-running.html#setting-up-the-application-environment","title":"Up and running - Setting up the application environment","type":"extras"},{"doc":"Head over to configuration to configure the behavior of the application, enable and disable particular features by simply editing respective configuration files.","ref":"up-and-running.html#configuration","title":"Up and running - Configuration","type":"extras"},{"doc":"Currently, the web interface is not implemented. Nevertheless, you can load the umbrella application to the Interactive Elixir - IEx.$ iex -S mix run","ref":"up-and-running.html#running","title":"Up and running - Running","type":"extras"},{"doc":"The application codebase is extensively tested with unit tests using ExUnit.$ mix testYou can also measure code coverage by using ExCoveralls.$ MIX_ENV=test mix coveralls # plain-text output $ MIX_ENV=test mix coveralls.html # HTML outputOr, you may use the convenience command, which behaves identical to the former command allowing you to get plain-text coverage information.$ mix test --cover","ref":"up-and-running.html#tests","title":"Up and running - Tests","type":"extras"},{"doc":"Configuring the applicationAuthor: Buğra EkukluRevision historyInitial draft, 18-06-11, Buğra Ekuklu.Legion presents a completely opinionated authentication/authorization mechanism, using best-practices as much as possible, however it also supports configuring by supplying various configuration parameters in configuration files.","ref":"configuration.html","title":"Configuring the application","type":"extras"},{"doc":"One may use a configuration script by simply creating a new .exs file. The configuration script file should contain all configuration parameters of the application.# legion.exs use Mix.Config six_months = 15_552_000 config :legion, Legion.Identity.Auth.AccessControl, permission_set_name_length: 4..28, permission_set_description_length: 8..80, maximum_granting_deferral: six_months, maximum_granting_lifetime: six_months, allow_infinite_lifetime: true # other configuration calls...Assuming we created a configuration script named legion.exs, we could then use the file by using import macro of Mix in our main configuration file.# config.exs use Mix.Config import_config &quot;legion.exs&quot;","ref":"configuration.html#using-configuration-scripts","title":"Configuring the application - Using configuration scripts","type":"extras"},{"doc":"Most of the time, implementations requiring configurable values retrieve these values from configuration function provided by the Mix.Legion makes use of a convention of retrieving configuration values at the compile-time by using module attributes. For example, you can retrieve passkey scaling factor at the compile-time by following module attribute definition.defmodule App.SomeModule do @moduledoc false @env Application.get_env(:legion, Legion.Identity.Auth.Concrete) @scale Keyword.fetch!(@env, :passkey_scaling) # Use @scale module attribute endHowever, since this is a compile-time attribute, it is significant to clarify that the changes happened at the runtime are not reflected to the module attributes.If you are not able to use module attributes directly, i.e. macro context, you may also use the Module.get_attribute/2 function.defmodule App.AnotherModule do @moduledoc false @apm_env Application.get_env(:legion, Legion.Messaging.Medium.APM) @apm_subject_len Keyword.fetch!(@apm_env, :subject_length) @push_env Application.get_env(:legion, Legion.Messaging.Medium.Push) @push_subject_len Keyword.fetch!(@push_env, :subject_length) @mediums [:apm, :push] for medium &lt;- @mediums do defp check_length(string, unquote(type)) do min = unquote(Module.get_attribute(__MODULE__, :&quot;\#{Atom.to_string(medium)}_subject_len&quot;)) if String.length(unquote(string)) &gt;= min, do: :ok, else: :error end end end","ref":"configuration.html#retrieving-configuration-values","title":"Configuring the application - Retrieving configuration values","type":"extras"},{"doc":"Legion retrieves most of the configuration values at the runtime. Unless it is explicitly specified by an external API, developers are not allowed to change the configuration values belong to Legion itself, and the result might be undefined behavior.defmodule App.ImproperSwitcher do use Mix.Config def close do # This is invalid config :legion, Legion.Messaging.Medium.APM, is_enabled?: false end enddefmodule App.ProperSwitcher do def close do # Using the explicit configuration API disable_medium(user_id, :apm) end end","ref":"configuration.html#altering-configuration-values-at-runtime","title":"Configuring the application - Altering configuration values at runtime","type":"extras"},{"doc":"Preface","ref":"preface-iam.html","title":"Preface","type":"extras"},{"doc":"ConfigurationAuthor: Buğra EkukluRevision historyInitial draft, 18-06-14, Buğra Ekuklu.","ref":"configuration-iam.html","title":"Configuration","type":"extras"},{"doc":"The module is configured using namespace Legion.Identity.Auth.AccessControl, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:permission_set_name_lengthRange.t()-Indicates the bounds of length of a permission set name.4..28:permission_set_description_lengthRange.t()-Indicates the bounds of length of a permission set description.8..80:maximum_granting_deferralpos_integer()-Determines the maximum possible amount of deferral applied on a permission set granting.15_552_000:maximum_granting_lifetimepos_integer()secondsDetermines the maximum duration of a granting action.15_552_000:allow_infinite_lifetimeboolean()-Allows infinite lifetime on a permission set grant. Grants with infinite lifetimes can only be invalidated manually.true","ref":"configuration-iam.html#access-control","title":"Configuration - Access control","type":"extras"},{"doc":"The module is configured using namespace Legion.Identity.Auth.Concrete, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:passkey_scalingpos_integer()-Scales the authentication passphrase by given number to increase the entropy.4:passphrase_lifetimepos_integer()secondsDuration of a passphrase without being invalidated.15_552_000:user_agent_lengthpos_integer()-Maximum length of the user agent string sent by the client.400:maximum_allowed_passphrasespos_integer()-Maximum number of active passphrases allowed to a client.5:allow_local_addressesboolean()-Bypasses CIDR-based checks for connections used during authentication.false:allow_failsafe_reverse_geocodingboolean()-Allows reverse geocoding process to be fail-safe during authenticationfalse","ref":"configuration-iam.html#concrete-authentication","title":"Configuration - Concrete authentication","type":"extras"},{"doc":"The module is configured using namespace Legion.Identity.Auth.Concrete.JOSE, with the following attributes.KeyData TypeUnitsDescriptionDefault:secret_key_baseString.t()-Secret key used in HMAC algorithm (JWS).See notes (1).:issuerString.t()-Issuer of the JWT.N/A:lifetimepos_integer()-Valid duration for the JWT.300:extended_lifetimepos_integer()-Extended valid duration for the JWT.300:subString.t()-Purpose of the issue.access","ref":"configuration-iam.html#json-object-signing-and-encoding-jose","title":"Configuration - JSON Object Signing and Encoding (JOSE)","type":"extras"},{"doc":"The module is configured using namespace Legion.Identity.Auth.Insecure, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:allowed_cleartext_safe_artifacts[t() :: :username ǀ :email]-Allowed cleartext credentials of username and email.[:username, :email]:username_typet() :: :alphanumeric ǀ :numeric-Data type for the username.:alphanumeric:username_lengthRange.t()-Length of the username.6..20:bypass_concrete_authboolean()-Possibility of sign in without concrete authentication. See notes (2).true:password_digestiont() :: :bcrypt ǀ :pbkdf2 ǀ :argon2-Algorithm to be used in digestion stage of the cleartext password.:argon2:password_typet() :: :numeric ǀ :ascii ǀ :unicode-Type of the password.:unicode:password_lengthRange.t()-Length of the password.8..32:password_minimum_security_level[t() :: :length ǀ :chartypes ǀ :all]-Password security level threshold.:all","ref":"configuration-iam.html#insecure-authentication","title":"Configuration - Insecure authentication","type":"extras"},{"doc":"The module is configured using namespace Legion.Identity.Auth.OTC, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:typet() :: :alphanumeric ǀ :integer-Type of the one time code.:integer:lengthpos_integer()-Length of a one time code, increases entropy.:integer:prefixString.t()-Prefix of the one time code.λ:postfixString.t()-Postfix of the one time code.λ:mediumSee note (3).-Medium adapter to be used in sending one time code.Legion.Identity.Auth.OTC.Adapters.SMS","ref":"configuration-iam.html#otc","title":"Configuration - OTC","type":"extras"},{"doc":"The module is configured using namespace Legion.Identity.Auth.Concrete.TFA, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:lifetimepos_integer()secondsDuration of the two-factor authentication handle.180:allowed_attemptspos_integer()-Number of attempts to invalidate the handle.3","ref":"configuration-iam.html#two-factor-authentication","title":"Configuration - Two-factor authentication","type":"extras"},{"doc":"The module is configured using namespace Legion.Identity.Auth.Algorithm, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:keccak_variantt() :: :sha3_224 ǀ :sha3_256 ǀ :sha3_384 ǀ :sha3_512-Keccak variant to be used in hashing passkeys.:sha3_512","ref":"configuration-iam.html#persistence-algorithm","title":"Configuration - Persistence algorithm","type":"extras"},{"doc":"The module is configured using namespace Legion.Identity.Information.PersonalData, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:given_name_lengthRange.t()-Length of the given name.1..80:middle_name_lengthRange.t()-Length of the middle name.1..80:family_name_lengthRange.t()-Length of the family name.1..80:name_prefix_lengthRange.t()-Length of the name prefix.1..80:name_postfix_lengthRange.t()-Length of the name postfix.1..80:nickname_lengthRange.t()-Length of the nickname.1..80:phonetic_representation_lengthRange.t()-Length of the phonetic representation of the name.1..80","ref":"configuration-iam.html#personal-data","title":"Configuration - Personal data","type":"extras"},{"doc":"The module is configured using namespace Legion.Identity.Information.AddressBook, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:name_lengthRange.t()-Length of the name of an address book entry.1..24:description_lengthRange.t()-Length of the description of an address book entry.1..80:state_lengthRange.t()-Length of the state of the address entry.1..24:city_lengthRange.t()-Length of the city of the address entry.1..24:neighborhood_lengthRange.t()-Length of the neighborhood of the address entry.1..24:zip_code_lengthRange.t()-Length of the zip code of the address entry.1..24:listing_default_page_sizepos_integer()-Default page size of address book entry listing5","ref":"configuration-iam.html#address-book","title":"Configuration - Address book","type":"extras"},{"doc":"The module is configured using namespace Legion.Identity.Telephony.PhoneNumber, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:initial_safe_durationpos_integer()secondsThe initial safety duration of a new phone number entry.15_552_000:default_safe_durationpos_integer()secondsDefault duration for safety extension.15_552_000:maximum_safe_durationpos_integer()secondsThe maximum possible duration that can be given to safety extension.31_104_000","ref":"configuration-iam.html#phone-book","title":"Configuration - Phone book","type":"extras"},{"doc":"The secret key should be generated using secure random generator with increased entropy.Quoting from Quickstart documentation for Flask 0.12.4,How to generate good secret keysThe problem with random is that it’s hard to judge what is truly random. And a secret key should be as random as possible. Your operating system has ways to generate pretty random stuff based on a cryptographic random generator which can be used to get such a key (in Python REPL):import osos.urandom(24)Just take that thing and copy/paste it into your code and you're done.Passphrases are meant to be stored by the client-side program. Sometimes one might not need to save the authentication information on the device, such as public computers. This functionality is generally provided by a checkbox 'Remember me', which will save the session information on cookies, or local storage etc. When this checkbox is enabled, the server-side should not generate a passkey, but instead return a JWT immediately, to implement the correct behavior. Hence, the client-side program should be aware of deserialization of response sent by this application, since it may respond with either passkey or a token, directly.","ref":"configuration-iam.html#footnotes","title":"Configuration - Footnotes","type":"extras"},{"doc":"Preface","ref":"preface-mpb.html","title":"Preface","type":"extras"},{"doc":"ConfigurationAuthor: Buğra EkukluRevision historyInitial draft, 18-06-14, Buğra Ekuklu.","ref":"configuration-mpb.html","title":"Configuration","type":"extras"},{"doc":"The module is configured using namespace Legion.Messaging.Switching.Globals, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:history_buffer_length[Range.t()]-Number of entries in history buffer rollback.5","ref":"configuration-mpb.html#global-switches","title":"Configuration - Global switches","type":"extras"},{"doc":"The module is configured using namespace Legion.Messaging.Medium.APM, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:subject_length[Range.t()]-Length of the subject of the message.2..40:body_length[Range.t()]-Length of the body of the message.5..255:is_enabledboolean()-Compile-time switch to enable the medium.true","ref":"configuration-mpb.html#apm-medium","title":"Configuration - APM medium","type":"extras"},{"doc":"The module is configured using namespace Legion.Messaging.Medium.Push, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:subject_length[Range.t()]-Length of the subject of the message.2..40:body_length[Range.t()]-Length of the body of the message.5..255:is_enabledboolean()-Compile-time switch to enable the medium.true","ref":"configuration-mpb.html#push-medium","title":"Configuration - Push medium","type":"extras"},{"doc":"The module is configured using namespace Legion.Messaging.Medium.Mailing, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:subject_length[Range.t()]-Length of the subject of the message.2..40:body_length[Range.t()]-Length of the body of the message.5..255:is_enabledboolean()-Compile-time switch to enable the medium.true","ref":"configuration-mpb.html#mailing-medium","title":"Configuration - Mailing medium","type":"extras"},{"doc":"The module is configured using namespace Legion.Messaging.Medium.SMS, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:body_length[Range.t()]-Length of the body of the message.5..255:is_enabledboolean()-Compile-time switch to enable the medium.true","ref":"configuration-mpb.html#sms-medium","title":"Configuration - SMS medium","type":"extras"},{"doc":"The module is configured using namespace Legion.Messaging.Medium.Platform, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:subject_length[Range.t()]-Length of the subject of the message.2..40:body_length[Range.t()]-Length of the body of the message.5..255:is_enabledboolean()-Compile-time switch to enable the medium.true","ref":"configuration-mpb.html#platform-medium","title":"Configuration - Platform medium","type":"extras"},{"doc":"The modules is configured using namespace Legion.Messaging.Templatization, with the following attributes.Parameter nameData TypeUnitsDescriptionDefault:template_name_length[Range.t()]-Length of the name of the template.5..50","ref":"configuration-mpb.html#templatization","title":"Configuration - Templatization","type":"extras"}]